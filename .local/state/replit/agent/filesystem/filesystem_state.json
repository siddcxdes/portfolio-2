{"file_contents":{"README.md":{"content":"# Getting Started with Create React App\n\nThis project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n\n## Available Scripts\n\nIn the project directory, you can run:\n\n### `npm start`\n\nRuns the app in the development mode.\\\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\n\nThe page will reload if you make edits.\\\nYou will also see any lint errors in the console.\n\n### `npm test`\n\nLaunches the test runner in the interactive watch mode.\\\nSee the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n\n### `npm run build`\n\nBuilds the app for production to the `build` folder.\\\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n\nThe build is minified and the filenames include the hashes.\\\nYour app is ready to be deployed!\n\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n\n### `npm run eject`\n\n**Note: this is a one-way operation. Once you `eject`, you can’t go back!**\n\nIf you aren’t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you’re on your own.\n\nYou don’t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn’t feel obligated to use this feature. However we understand that this tool wouldn’t be useful if you couldn’t customize it when you are ready for it.\n\n## Learn More\n\nYou can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n\nTo learn React, check out the [React documentation](https://reactjs.org/).\n","size_bytes":2117},"src/config.js":{"content":"module.exports = {\n  email: 'sidheshwarsharma77@gmail.com',\n\n  socialMedia: [\n    {\n      name: 'GitHub',\n      url: 'https://github.com/siddcxdes',\n    },\n    {\n      name: 'Linkedin',\n      url: 'https://www.linkedin.com/in/sidheshwar-sharma-69242a27b/',\n    },\n    {\n      name: 'LeetCode',\n      url: 'https://leetcode.com/u/sidheshwar23/',\n    },\n    {\n      name: 'GeeksforGeeks',\n      url: 'https://www.geeksforgeeks.org/user/user_85j0gs2rlny/',\n    },\n  ],\n\n  navLinks: [\n    {\n      name: 'About',\n      url: '/#about',\n    },\n    {\n      name: 'Projects',\n      url: '/#projects',\n    },\n    {\n      name: 'Skills',\n      url: '/#skills',\n    },\n    {\n      name: 'Experience',\n      url: '/#jobs',\n    },\n    {\n      name: 'Contact',\n      url: '/#contact',\n    },\n  ],\n\n  colors: {\n    green: '#64ffda',\n    navy: '#0a192f',\n    darkNavy: '#020c1b',\n  },\n\n  srConfig: (delay = 200, viewFactor = 0.25) => ({\n    origin: 'bottom',\n    distance: '20px',\n    duration: 500,\n    delay,\n    rotate: { x: 0, y: 0, z: 0 },\n    opacity: 0,\n    scale: 1,\n    easing: 'cubic-bezier(0.645, 0.045, 0.355, 1)',\n    mobile: true,\n    reset: false,\n    useDelay: 'always',\n    viewFactor,\n    viewOffset: { top: 0, right: 0, bottom: 0, left: 0 },\n  }),\n};\n","size_bytes":1253},"src/components/email.js":{"content":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { email } from '../config';\nimport { Side } from '.';\n\nconst StyledLinkWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n\n  &:after {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 90px;\n    margin: 0 auto;\n    background-color: var(--light-slate);\n  }\n\n  a {\n    margin: 20px auto;\n    padding: 10px;\n    font-family: var(--font-mono);\n    font-size: var(--fz-xxs);\n    line-height: var(--fz-lg);\n    letter-spacing: 0.1em;\n    writing-mode: vertical-rl;\n\n    &:hover,\n    &:focus {\n      transform: translateY(-3px);\n    }\n  }\n`;\n\nconst Email = ({ isHome }) => (\n  <Side isHome={isHome} orientation=\"right\">\n    <StyledLinkWrapper>\n      <a href={`mailto:${email}`}>{email}</a>\n    </StyledLinkWrapper>\n  </Side>\n);\n\nEmail.propTypes = {\n  isHome: PropTypes.bool,\n};\n\nexport default Email;\n","size_bytes":979},"src/components/footer.js":{"content":"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Icon } from '../components/icons';\nimport { socialMedia } from '../config';\n\nconst StyledFooter = styled.footer`\n  ${({ theme }) => theme.mixins.flexCenter};\n  flex-direction: column;\n  height: auto;\n  min-height: 70px;\n  padding: 15px;\n  text-align: center;\n`;\n\nconst StyledSocialLinks = styled.div`\n  display: none;\n\n  @media (max-width: 768px) {\n    display: block;\n    width: 100%;\n    max-width: 270px;\n    margin: 0 auto 10px;\n    color: var(--light-slate);\n  }\n\n  ul {\n    ${({ theme }) => theme.mixins.flexBetween};\n    padding: 0;\n    margin: 0;\n    list-style: none;\n\n    a {\n      padding: 10px;\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n  }\n`;\n\nconst StyledCredit = styled.div`\n  color: var(--light-slate);\n  font-family: var(--font-mono);\n  font-size: var(--fz-xxs);\n  line-height: 1;\n\n  a {\n    padding: 10px;\n  }\n\n  .github-stats {\n    margin-top: 10px;\n\n    & > span {\n      display: inline-flex;\n      align-items: center;\n      margin: 0 7px;\n    }\n    svg {\n      display: inline-block;\n      margin-right: 5px;\n      width: 14px;\n      height: 14px;\n    }\n  }\n`;\n\nconst Footer = () => {\n  const [githubInfo, setGitHubInfo] = useState({\n    stars: null,\n    forks: null,\n  });\n\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      return;\n    }\n    fetch('https://api.github.com/repos/bchiang7/v4')\n      .then(response => response.json())\n      .then(json => {\n        const { stargazers_count, forks_count } = json;\n        setGitHubInfo({\n          stars: stargazers_count,\n          forks: forks_count,\n        });\n      })\n      .catch(e => console.error(e));\n  }, []);\n\n  return (\n    <StyledFooter>\n      <StyledSocialLinks>\n        <ul>\n          {socialMedia &&\n            socialMedia.map(({ name, url }, i) => (\n              <li key={i}>\n                <a href={url} aria-label={name}>\n                  <Icon name={name} />\n                </a>\n              </li>\n            ))}\n        </ul>\n      </StyledSocialLinks>\n\n      <StyledCredit tabindex=\"-1\">\n        <a href=\"https://github.com/bchiang7/v4\">\n          <div>Designed &amp; Built by Brittany Chiang</div>\n\n          {githubInfo.stars && githubInfo.forks && (\n            <div className=\"github-stats\">\n              <span>\n                <Icon name=\"Star\" />\n                <span>{githubInfo.stars.toLocaleString()}</span>\n              </span>\n              <span>\n                <Icon name=\"Fork\" />\n                <span>{githubInfo.forks.toLocaleString()}</span>\n              </span>\n            </div>\n          )}\n        </a>\n      </StyledCredit>\n    </StyledFooter>\n  );\n};\n\nFooter.propTypes = {\n  githubInfo: PropTypes.object,\n};\n\nexport default Footer;\n","size_bytes":2851},"src/components/head.js":{"content":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { siteMetadata } from '../data';\n\n// https://www.gatsbyjs.com/docs/add-seo-component/\n\nconst Head = ({ title, description, image }) => {\n  const { pathname } = window.location;\n\n  const site = { siteMetadata };\n\n  const {\n    defaultTitle,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  };\n\n  return (\n    <Helmet title={title} defaultTitle={seo.title} titleTemplate={`%s | ${defaultTitle}`}>\n      <html lang=\"en\" />\n\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:type\" content=\"website\" />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={twitterUsername} />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n\n      <meta name=\"google-site-verification\" content=\"DCl7VAf9tcz6eD9gb67NfkNnJ1PKRNcg8qQiwpbx9Lk\" />\n    </Helmet>\n  );\n};\n\nexport default Head;\n\nHead.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n};\n\nHead.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n};\n","size_bytes":1802},"src/components/index.js":{"content":"export { default as Head } from './head';\nexport { default as Layout } from './layout';\nexport { default as Loader } from './loader';\nexport { default as Nav } from './nav';\nexport { default as Menu } from './menu';\nexport { default as Side } from './side';\nexport { default as Social } from './social';\nexport { default as Email } from './email';\nexport { default as Footer } from './footer';\nexport { default as Hero } from './sections/hero';\nexport { default as About } from './sections/about';\nexport { default as Skills } from './sections/skills';\nexport { default as Jobs } from './sections/jobs';\nexport { default as Featured } from './sections/featured';\nexport { default as Projects } from './sections/projects';\nexport { default as Contact } from './sections/contact';\n","size_bytes":779},"src/components/layout.js":{"content":"import React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { Head, Loader, Nav, Social, Email, Footer } from './index';\nimport { GlobalStyle, theme } from '../styles';\n\nconst StyledContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  const isHome = window.location.pathname === '/';\n  const [isLoading, setIsLoading] = useState(isHome);\n\n  // Sets target=\"_blank\" rel=\"noopener noreferrer\" on external links\n  const handleExternalLinks = () => {\n    const allLinks = Array.from(document.querySelectorAll('a'));\n    if (allLinks.length > 0) {\n      allLinks.forEach(link => {\n        if (link.host !== window.location.host) {\n          link.setAttribute('rel', 'noopener noreferrer');\n          link.setAttribute('target', '_blank');\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (isLoading) {\n      return;\n    }\n\n    if (window.location.hash) {\n      const id = window.location.hash.substring(1); // location.hash without the '#'\n      setTimeout(() => {\n        const el = document.getElementById(id);\n        if (el) {\n          el.scrollIntoView();\n          el.focus();\n        }\n      }, 0);\n    }\n\n    handleExternalLinks();\n  }, [isLoading]);\n\n  return (\n    <>\n      <Head />\n\n      <div id=\"root\">\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n\n          <a className=\"skip-to-content\" href=\"#content\">\n            Skip to Content\n          </a>\n\n          {isLoading && isHome ? (\n            <Loader finishLoading={() => setIsLoading(false)} />\n          ) : (\n            <StyledContent>\n              <Nav isHome={isHome} />\n              <Social isHome={isHome} />\n              <Email isHome={isHome} />\n\n              <div id=\"content\">\n                {children}\n                <Footer />\n              </div>\n            </StyledContent>\n          )}\n        </ThemeProvider>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","size_bytes":2092},"src/components/loader.js":{"content":"import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport anime from 'animejs';\nimport styled from 'styled-components';\nimport { IconLoader } from '../components/icons';\n\nconst StyledLoader = styled.div`\n  ${({ theme }) => theme.mixins.flexCenter};\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--dark-navy);\n  z-index: 99;\n\n  .logo-wrapper {\n    width: max-content;\n    max-width: 100px;\n    transition: var(--transition);\n    opacity: ${props => (props.isMounted ? 1 : 0)};\n    svg {\n      display: block;\n      width: 100%;\n      height: 100%;\n      margin: 0 auto;\n      fill: none;\n      user-select: none;\n      #B {\n        opacity: 0;\n      }\n    }\n  }\n`;\n\nconst Loader = ({ finishLoading }) => {\n  const [isMounted, setIsMounted] = useState(false);\n\n  const animate = () => {\n    const loader = anime.timeline({\n      complete: () => finishLoading(),\n    });\n\n    loader\n      .add({\n        targets: '#logo path',\n        delay: 300,\n        duration: 1500,\n        easing: 'easeInOutQuart',\n        strokeDashoffset: [anime.setDashoffset, 0],\n      })\n      .add({\n        targets: '#logo #B',\n        duration: 700,\n        easing: 'easeInOutQuart',\n        opacity: 1,\n      })\n      .add({\n        targets: '#logo',\n        delay: 500,\n        duration: 300,\n        easing: 'easeInOutQuart',\n        opacity: 0,\n        scale: 0.1,\n      })\n      .add({\n        targets: '.loader',\n        duration: 200,\n        easing: 'easeInOutQuart',\n        opacity: 0,\n        zIndex: -1,\n      });\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setIsMounted(true), 10);\n    animate();\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <StyledLoader className=\"loader\" isMounted={isMounted}>\n      <Helmet bodyAttributes={{ class: `hidden` }} />\n\n      <div className=\"logo-wrapper\">\n        <IconLoader />\n      </div>\n    </StyledLoader>\n  );\n};\n\nLoader.propTypes = {\n  finishLoading: PropTypes.func.isRequired,\n};\n\nexport default Loader;\n","size_bytes":2128},"src/components/menu.js":{"content":"import React, { useState, useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { navLinks } from '../config';\nimport { KEY_CODES } from '../utils';\nimport { useOnClickOutside } from '../hooks';\n\nconst StyledMenu = styled.div`\n  display: none;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n\nconst StyledHamburgerButton = styled.button`\n  display: none;\n\n  @media (max-width: 768px) {\n    ${({ theme }) => theme.mixins.flexCenter};\n    position: relative;\n    z-index: 10;\n    margin-right: -15px;\n    padding: 15px;\n    border: 0;\n    background-color: transparent;\n    color: inherit;\n    text-transform: none;\n    transition-timing-function: linear;\n    transition-duration: 0.15s;\n    transition-property: opacity, filter;\n  }\n\n  .ham-box {\n    display: inline-block;\n    position: relative;\n    width: var(--hamburger-width);\n    height: 24px;\n  }\n\n  .ham-box-inner {\n    position: absolute;\n    top: 50%;\n    right: 0;\n    width: var(--hamburger-width);\n    height: 2px;\n    border-radius: var(--border-radius);\n    background-color: var(--green);\n    transition-duration: 0.22s;\n    transition-property: transform;\n    transition-delay: ${props => (props.menuOpen ? `0.12s` : `0s`)};\n    transform: rotate(${props => (props.menuOpen ? `225deg` : `0deg`)});\n    transition-timing-function: cubic-bezier(\n      ${props => (props.menuOpen ? `0.215, 0.61, 0.355, 1` : `0.55, 0.055, 0.675, 0.19`)}\n    );\n    &:before,\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: auto;\n      right: 0;\n      width: var(--hamburger-width);\n      height: 2px;\n      border-radius: 4px;\n      background-color: var(--green);\n      transition-timing-function: ease;\n      transition-duration: 0.15s;\n      transition-property: transform;\n    }\n    &:before {\n      width: ${props => (props.menuOpen ? `100%` : `120%`)};\n      top: ${props => (props.menuOpen ? `0` : `-10px`)};\n      opacity: ${props => (props.menuOpen ? 0 : 1)};\n      transition: ${({ menuOpen }) =>\n    menuOpen ? 'var(--ham-before-active)' : 'var(--ham-before)'};\n    }\n    &:after {\n      width: ${props => (props.menuOpen ? `100%` : `80%`)};\n      bottom: ${props => (props.menuOpen ? `0` : `-10px`)};\n      transform: rotate(${props => (props.menuOpen ? `-90deg` : `0`)});\n      transition: ${({ menuOpen }) => (menuOpen ? 'var(--ham-after-active)' : 'var(--ham-after)')};\n    }\n  }\n`;\n\nconst StyledSidebar = styled.aside`\n  display: none;\n\n  @media (max-width: 768px) {\n    ${({ theme }) => theme.mixins.flexCenter};\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    padding: 50px 10px;\n    width: min(75vw, 400px);\n    height: 100vh;\n    outline: 0;\n    background-color: var(--light-navy);\n    box-shadow: -10px 0px 30px -15px var(--navy-shadow);\n    z-index: 9;\n    transform: translateX(${props => (props.menuOpen ? 0 : 100)}vw);\n    visibility: ${props => (props.menuOpen ? 'visible' : 'hidden')};\n    transition: var(--transition);\n  }\n\n  nav {\n    ${({ theme }) => theme.mixins.flexBetween};\n    width: 100%;\n    flex-direction: column;\n    color: var(--lightest-slate);\n    font-family: var(--font-mono);\n    text-align: center;\n  }\n\n  ol {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n    width: 100%;\n\n    li {\n      position: relative;\n      margin: 0 auto 20px;\n      counter-increment: item 1;\n      font-size: clamp(var(--fz-sm), 4vw, var(--fz-lg));\n\n      @media (max-width: 600px) {\n        margin: 0 auto 10px;\n      }\n\n      &:before {\n        content: '0' counter(item) '.';\n        display: block;\n        margin-bottom: 5px;\n        color: var(--green);\n        font-size: var(--fz-sm);\n      }\n    }\n\n    a {\n      ${({ theme }) => theme.mixins.link};\n      width: 100%;\n      padding: 3px 20px 20px;\n    }\n  }\n\n  .resume-link {\n    ${({ theme }) => theme.mixins.bigButton};\n    padding: 18px 50px;\n    margin: 10% auto 0;\n    width: max-content;\n  }\n`;\n\nconst Menu = () => {\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const toggleMenu = () => setMenuOpen(!menuOpen);\n\n  const buttonRef = useRef(null);\n  const navRef = useRef(null);\n\n  let menuFocusables;\n  let firstFocusableEl;\n  let lastFocusableEl;\n\n  const setFocusables = () => {\n    menuFocusables = [buttonRef.current, ...Array.from(navRef.current.querySelectorAll('a'))];\n    firstFocusableEl = menuFocusables[0];\n    lastFocusableEl = menuFocusables[menuFocusables.length - 1];\n  };\n\n  const handleBackwardTab = e => {\n    if (document.activeElement === firstFocusableEl) {\n      e.preventDefault();\n      lastFocusableEl.focus();\n    }\n  };\n\n  const handleForwardTab = e => {\n    if (document.activeElement === lastFocusableEl) {\n      e.preventDefault();\n      firstFocusableEl.focus();\n    }\n  };\n\n  const onKeyDown = e => {\n    switch (e.key) {\n      case KEY_CODES.ESCAPE:\n      case KEY_CODES.ESCAPE_IE11: {\n        setMenuOpen(false);\n        break;\n      }\n\n      case KEY_CODES.TAB: {\n        if (menuFocusables && menuFocusables.length === 1) {\n          e.preventDefault();\n          break;\n        }\n        if (e.shiftKey) {\n          handleBackwardTab(e);\n        } else {\n          handleForwardTab(e);\n        }\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  };\n\n  const onResize = e => {\n    if (e.currentTarget.innerWidth > 768) {\n      setMenuOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyDown);\n    window.addEventListener('resize', onResize);\n\n    setFocusables();\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  const wrapperRef = useRef();\n  useOnClickOutside(wrapperRef, () => setMenuOpen(false));\n\n  return (\n    <StyledMenu>\n      <Helmet>\n        <body className={menuOpen ? 'blur' : ''} />\n      </Helmet>\n\n      <div ref={wrapperRef}>\n        <StyledHamburgerButton\n          onClick={toggleMenu}\n          menuOpen={menuOpen}\n          ref={buttonRef}\n          aria-label=\"Menu\">\n          <div className=\"ham-box\">\n            <div className=\"ham-box-inner\" />\n          </div>\n        </StyledHamburgerButton>\n\n        <StyledSidebar menuOpen={menuOpen} aria-hidden={!menuOpen} tabIndex={menuOpen ? 1 : -1}>\n          <nav ref={navRef}>\n            {navLinks && (\n              <ol>\n                {navLinks.map(({ url, name }, i) => (\n                  <li key={i}>\n                    <Link to={url} onClick={() => setMenuOpen(false)}>\n                      {name}\n                    </Link>\n                  </li>\n                ))}\n              </ol>\n            )}\n\n            <a href=\"/resume.pdf\" className=\"resume-link\">\n              Resume\n            </a>\n          </nav>\n        </StyledSidebar>\n      </div>\n    </StyledMenu>\n  );\n};\n\nexport default Menu;\n","size_bytes":6923},"src/components/nav.js":{"content":"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styled, { css } from 'styled-components';\nimport { navLinks } from '../config';\nimport { loaderDelay } from '../utils';\nimport { useScrollDirection, usePrefersReducedMotion } from '../hooks';\nimport { Menu } from '.';\nimport { IconLogo, IconHex } from '../components/icons';\n\nconst StyledHeader = styled.header`\n  ${({ theme }) => theme.mixins.flexBetween};\n  position: fixed;\n  top: 0;\n  z-index: 11;\n  padding: 0px 50px;\n  width: 100%;\n  height: var(--nav-height);\n  background-color: rgba(10, 25, 47, 0.85);\n  filter: none !important;\n  pointer-events: auto !important;\n  user-select: auto !important;\n  backdrop-filter: blur(10px);\n  transition: var(--transition);\n\n  @media (max-width: 1080px) {\n    padding: 0 40px;\n  }\n  @media (max-width: 768px) {\n    padding: 0 25px;\n  }\n\n  @media (prefers-reduced-motion: no-preference) {\n    ${props =>\n    props.scrollDirection === 'up' &&\n      !props.scrolledToTop &&\n      css`\n        height: var(--nav-scroll-height);\n        transform: translateY(0px);\n        background-color: rgba(10, 25, 47, 0.85);\n        box-shadow: 0 10px 30px -10px var(--navy-shadow);\n      `};\n\n    ${props =>\n    props.scrollDirection === 'down' &&\n      !props.scrolledToTop &&\n      css`\n        height: var(--nav-scroll-height);\n        transform: translateY(calc(var(--nav-scroll-height) * -1));\n        box-shadow: 0 10px 30px -10px var(--navy-shadow);\n      `};\n  }\n`;\n\nconst StyledNav = styled.nav`\n  ${({ theme }) => theme.mixins.flexBetween};\n  position: relative;\n  width: 100%;\n  color: var(--lightest-slate);\n  font-family: var(--font-mono);\n  counter-reset: item 0;\n  z-index: 12;\n\n  .logo {\n    ${({ theme }) => theme.mixins.flexCenter};\n\n    a {\n      color: var(--green);\n      width: 42px;\n      height: 42px;\n      position: relative;\n      z-index: 1;\n\n      .hex-container {\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: -1;\n        @media (prefers-reduced-motion: no-preference) {\n          transition: var(--transition);\n        }\n      }\n\n      .logo-container {\n        position: relative;\n        z-index: 1;\n        svg {\n          fill: none;\n          user-select: none;\n          @media (prefers-reduced-motion: no-preference) {\n            transition: var(--transition);\n          }\n          polygon {\n            fill: var(--navy);\n          }\n        }\n      }\n\n      &:hover,\n      &:focus {\n        outline: 0;\n        transform: translate(-4px, -4px);\n        .hex-container {\n          transform: translate(4px, 3px);\n        }\n      }\n    }\n  }\n`;\n\nconst StyledLinks = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n\n  ol {\n    ${({ theme }) => theme.mixins.flexBetween};\n    padding: 0;\n    margin: 0;\n    list-style: none;\n\n    li {\n      margin: 0 5px;\n      position: relative;\n      counter-increment: item 1;\n      font-size: var(--fz-xs);\n\n      a {\n        padding: 10px;\n\n        &:before {\n          content: '0' counter(item) '.';\n          margin-right: 5px;\n          color: var(--green);\n          font-size: var(--fz-xxs);\n          text-align: right;\n        }\n      }\n    }\n  }\n\n  .resume-button {\n    ${({ theme }) => theme.mixins.smallButton};\n    margin-left: 15px;\n    font-size: var(--fz-xs);\n  }\n`;\n\nconst Nav = ({ isHome }) => {\n  const [isMounted, setIsMounted] = useState(!isHome);\n  const scrollDirection = useScrollDirection('down');\n  const [scrolledToTop, setScrolledToTop] = useState(true);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  const handleScroll = () => {\n    setScrolledToTop(window.pageYOffset < 50);\n  };\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    const timeout = setTimeout(() => {\n      setIsMounted(true);\n    }, 100);\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const timeout = isHome ? loaderDelay : 0;\n  const fadeClass = isHome ? 'fade' : '';\n  const fadeDownClass = isHome ? 'fadedown' : '';\n\n  const Logo = (\n    <div className=\"logo\" tabIndex=\"-1\">\n      {isHome ? (\n        <a href=\"/\" aria-label=\"home\">\n          <div className=\"hex-container\">\n            <IconHex />\n          </div>\n          <div className=\"logo-container\">\n            <IconLogo />\n          </div>\n        </a>\n      ) : (\n        <Link to=\"/\" aria-label=\"home\">\n          <div className=\"hex-container\">\n            <IconHex />\n          </div>\n          <div className=\"logo-container\">\n            <IconLogo />\n          </div>\n        </Link>\n      )}\n    </div>\n  );\n\n  const ResumeLink = (\n    <a className=\"resume-button\" href=\"/resume.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n      Resume\n    </a>\n  );\n\n  return (\n    <StyledHeader scrollDirection={scrollDirection} scrolledToTop={scrolledToTop}>\n      <StyledNav>\n        {prefersReducedMotion ? (\n          <>\n            {Logo}\n\n            <StyledLinks>\n              <ol>\n                {navLinks &&\n                  navLinks.map(({ url, name }, i) => (\n                    <li key={i}>\n                      <Link to={url}>{name}</Link>\n                    </li>\n                  ))}\n              </ol>\n              <div>{ResumeLink}</div>\n            </StyledLinks>\n\n            <Menu />\n          </>\n        ) : (\n          <>\n            <TransitionGroup component={null}>\n              {isMounted && (\n                <CSSTransition classNames={fadeClass} timeout={timeout}>\n                  <>{Logo}</>\n                </CSSTransition>\n              )}\n            </TransitionGroup>\n\n            <StyledLinks>\n              <ol>\n                <TransitionGroup component={null}>\n                  {isMounted &&\n                    navLinks &&\n                    navLinks.map(({ url, name }, i) => (\n                      <CSSTransition key={i} classNames={fadeDownClass} timeout={timeout}>\n                        <li key={i} style={{ transitionDelay: `${isHome ? i * 100 : 0}ms` }}>\n                          <Link to={url}>{name}</Link>\n                        </li>\n                      </CSSTransition>\n                    ))}\n                </TransitionGroup>\n              </ol>\n\n              <TransitionGroup component={null}>\n                {isMounted && (\n                  <CSSTransition classNames={fadeDownClass} timeout={timeout}>\n                    <div style={{ transitionDelay: `${isHome ? navLinks.length * 100 : 0}ms` }}>\n                      {ResumeLink}\n                    </div>\n                  </CSSTransition>\n                )}\n              </TransitionGroup>\n            </StyledLinks>\n\n            <TransitionGroup component={null}>\n              {isMounted && (\n                <CSSTransition classNames={fadeClass} timeout={timeout}>\n                  <Menu />\n                </CSSTransition>\n              )}\n            </TransitionGroup>\n          </>\n        )}\n      </StyledNav>\n    </StyledHeader>\n  );\n};\n\nNav.propTypes = {\n  isHome: PropTypes.bool,\n};\n\nexport default Nav;\n","size_bytes":7293},"src/components/side.js":{"content":"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styled from 'styled-components';\nimport { loaderDelay } from '../utils';\nimport { usePrefersReducedMotion } from '../hooks';\n\nconst StyledSideElement = styled.div`\n  width: 40px;\n  position: fixed;\n  bottom: 0;\n  left: ${props => (props.orientation === 'left' ? '40px' : 'auto')};\n  right: ${props => (props.orientation === 'left' ? 'auto' : '40px')};\n  z-index: 10;\n  color: var(--light-slate);\n\n  @media (max-width: 1080px) {\n    left: ${props => (props.orientation === 'left' ? '20px' : 'auto')};\n    right: ${props => (props.orientation === 'left' ? 'auto' : '20px')};\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Side = ({ children, isHome, orientation }) => {\n  const [isMounted, setIsMounted] = useState(!isHome);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (!isHome || prefersReducedMotion) {\n      return;\n    }\n    const timeout = setTimeout(() => setIsMounted(true), loaderDelay);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <StyledSideElement orientation={orientation}>\n      {prefersReducedMotion ? (\n        <>{children}</>\n      ) : (\n        <TransitionGroup component={null}>\n          {isMounted && (\n            <CSSTransition classNames={isHome ? 'fade' : ''} timeout={isHome ? loaderDelay : 0}>\n              {children}\n            </CSSTransition>\n          )}\n        </TransitionGroup>\n      )}\n    </StyledSideElement>\n  );\n};\n\nSide.propTypes = {\n  children: PropTypes.node.isRequired,\n  isHome: PropTypes.bool,\n  orientation: PropTypes.string,\n};\n\nexport default Side;\n","size_bytes":1750},"src/components/social.js":{"content":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { socialMedia } from '../config';\nimport { Side } from '.';\nimport { Icon } from '../components/icons';\n\nconst StyledSocialList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  &:after {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 90px;\n    margin: 0 auto;\n    background-color: var(--light-slate);\n  }\n\n  li {\n    &:last-of-type {\n      margin-bottom: 20px;\n    }\n\n    a {\n      padding: 10px;\n\n      &:hover,\n      &:focus {\n        transform: translateY(-3px);\n      }\n\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n  }\n`;\n\nconst Social = ({ isHome }) => (\n  <Side isHome={isHome} orientation=\"left\">\n    <StyledSocialList>\n      {socialMedia &&\n        socialMedia.map(({ url, name }, i) => (\n          <li key={i}>\n            <a href={url} aria-label={name} target=\"_blank\" rel=\"noreferrer\">\n              <Icon name={name} />\n            </a>\n          </li>\n        ))}\n    </StyledSocialList>\n  </Side>\n);\n\nSocial.propTypes = {\n  isHome: PropTypes.bool,\n};\n\nexport default Social;\n","size_bytes":1224},"src/hooks/index.js":{"content":"export { default as useOnClickOutside } from './useOnClickOutside';\nexport { default as usePrefersReducedMotion } from './usePrefersReducedMotion';\nexport { default as useScrollDirection } from './useScrollDirection';\n","size_bytes":218},"src/hooks/useOnClickOutside.js":{"content":"import { useEffect } from 'react';\n\n// https://usehooks.com/useOnClickOutside/\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(\n    () => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler],\n  );\n};\n\nexport default useOnClickOutside;\n","size_bytes":1094},"src/hooks/usePrefersReducedMotion.js":{"content":"/**\n * https://www.joshwcomeau.com/snippets/react-hooks/use-prefers-reduced-motion/\n */\n\nimport { useState, useEffect } from 'react';\nconst QUERY = '(prefers-reduced-motion: no-preference)';\nconst isRenderingOnServer = typeof window === 'undefined';\n\nconst getInitialState = () =>\n  // For our initial server render, we won't know if the user\n  // prefers reduced motion, but it doesn't matter. This value\n  // will be overwritten on the client, before any animations\n  // occur.\n  isRenderingOnServer ? true : !window.matchMedia(QUERY).matches;\nfunction usePrefersReducedMotion() {\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(getInitialState);\n  useEffect(() => {\n    const mediaQueryList = window.matchMedia(QUERY);\n    const listener = event => {\n      setPrefersReducedMotion(!event.matches);\n    };\n    mediaQueryList.addListener(listener);\n    return () => {\n      mediaQueryList.removeListener(listener);\n    };\n  }, []);\n  return prefersReducedMotion;\n}\n\nexport default usePrefersReducedMotion;\n","size_bytes":1026},"src/hooks/useScrollDirection.js":{"content":"import { useState, useEffect } from 'react';\n\nconst SCROLL_UP = 'up';\nconst SCROLL_DOWN = 'down';\n\nconst useScrollDirection = ({ initialDirection, thresholdPixels, off } = {}) => {\n  const [scrollDir, setScrollDir] = useState(initialDirection);\n\n  useEffect(() => {\n    const threshold = thresholdPixels || 0;\n    let lastScrollY = window.pageYOffset;\n    let ticking = false;\n\n    const updateScrollDir = () => {\n      const scrollY = window.pageYOffset;\n\n      if (Math.abs(scrollY - lastScrollY) < threshold) {\n        // We haven't exceeded the threshold\n        ticking = false;\n        return;\n      }\n\n      setScrollDir(scrollY > lastScrollY ? SCROLL_DOWN : SCROLL_UP);\n      lastScrollY = scrollY > 0 ? scrollY : 0;\n      ticking = false;\n    };\n\n    const onScroll = () => {\n      if (!ticking) {\n        window.requestAnimationFrame(updateScrollDir);\n        ticking = true;\n      }\n    };\n\n    /**\n     * Bind the scroll handler if `off` is set to false.\n     * If `off` is set to true reset the scroll direction.\n     */\n    !off ? window.addEventListener('scroll', onScroll) : setScrollDir(initialDirection);\n\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [initialDirection, thresholdPixels, off]);\n\n  return scrollDir;\n};\n\nexport default useScrollDirection;\n","size_bytes":1297},"src/styles/GlobalStyle.js":{"content":"import { createGlobalStyle } from 'styled-components';\nimport fonts from './fonts';\nimport variables from './variables';\nimport TransitionStyles from './TransitionStyles';\nimport PrismStyles from './PrismStyles';\n\nconst GlobalStyle = createGlobalStyle`\n  ${fonts};\n  ${variables};\n\n  html {\n    box-sizing: border-box;\n    width: 100%;\n    scroll-behavior: smooth;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  ::selection {\n    background-color: var(--lightest-navy);\n    color: var(--lightest-slate);\n  }\n\n  /* Provide basic, default focus styles.*/\n  :focus {\n    outline: 2px dashed var(--green);\n    outline-offset: 3px;\n  }\n\n  /*\n    Remove default focus styles for mouse users ONLY if\n    :focus-visible is supported on this platform.\n  */\n  :focus:not(:focus-visible) {\n    outline: none;\n    outline-offset: 0px;\n  }\n\n  /*\n    Optionally: If :focus-visible is supported on this\n    platform, provide enhanced focus styles for keyboard\n    focus.\n  */\n  :focus-visible {\n    outline: 2px dashed var(--green);\n    outline-offset: 3px;\n  }\n\n  /* Scrollbar Styles */\n  html {\n    scrollbar-width: thin;\n    scrollbar-color: var(--dark-slate) var(--navy);\n  }\n  ::-webkit-scrollbar {\n    width: 12px;\n  }\n  ::-webkit-scrollbar-track {\n    background: var(--navy);\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--dark-slate);\n    border: 3px solid var(--navy);\n    border-radius: 10px;\n  }\n\n  body {\n    margin: 0;\n    width: 100%;\n    min-height: 100%;\n    overflow-x: hidden;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    background-color: var(--navy);\n    color: var(--slate);\n    font-family: var(--font-sans);\n    font-size: var(--fz-xl);\n    line-height: 1.3;\n\n    @media (max-width: 480px) {\n      font-size: var(--fz-lg);\n    }\n\n    &.hidden {\n      overflow: hidden;\n    }\n\n    &.blur {\n      overflow: hidden;\n\n      header {\n        background-color: transparent;\n      }\n\n      #content > * {\n        filter: blur(5px) brightness(0.7);\n        transition: var(--transition);\n        pointer-events: none;\n        user-select: none;\n      }\n    }\n  }\n\n  #root {\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    grid-template-columns: 100%;\n  }\n\n  main {\n    margin: 0 auto;\n    width: 100%;\n    max-width: 1600px;\n    min-height: 100vh;\n    padding: 200px 150px;\n\n    @media (max-width: 1080px) {\n      padding: 200px 100px;\n    }\n    @media (max-width: 768px) {\n      padding: 150px 50px;\n    }\n    @media (max-width: 480px) {\n      padding: 125px 25px;\n    }\n\n    &.fillHeight {\n      padding: 0 150px;\n\n      @media (max-width: 1080px) {\n        padding: 0 100px;\n      }\n      @media (max-width: 768px) {\n        padding: 0 50px;\n      }\n      @media (max-width: 480px) {\n        padding: 0 25px;\n      }\n    }\n  }\n\n  section {\n    margin: 0 auto;\n    padding: 100px 0;\n    max-width: 1000px;\n\n    @media (max-width: 768px) {\n      padding: 80px 0;\n    }\n\n    @media (max-width: 480px) {\n      padding: 60px 0;\n    }\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 0 0 10px 0;\n    font-weight: 600;\n    color: var(--lightest-slate);\n    line-height: 1.1;\n  }\n\n  .big-heading {\n    margin: 0;\n    font-size: clamp(40px, 8vw, 80px);\n  }\n\n  .medium-heading {\n    margin: 0;\n    font-size: clamp(40px, 8vw, 60px);\n  }\n\n  .numbered-heading {\n    display: flex;\n    align-items: center;\n    position: relative;\n    margin: 10px 0 40px;\n    width: 100%;\n    font-size: clamp(26px, 5vw, var(--fz-heading));\n    white-space: nowrap;\n\n    &:before {\n      position: relative;\n      bottom: 4px;\n      counter-increment: section;\n      content: '0' counter(section) '.';\n      margin-right: 10px;\n      color: var(--green);\n      font-family: var(--font-mono);\n      font-size: clamp(var(--fz-md), 3vw, var(--fz-xl));\n      font-weight: 400;\n\n      @media (max-width: 480px) {\n        margin-bottom: -3px;\n        margin-right: 5px;\n      }\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: relative;\n      top: -5px;\n      width: 300px;\n      height: 1px;\n      margin-left: 20px;\n      background-color: var(--lightest-navy);\n\n      @media (max-width: 1080px) {\n        width: 200px;\n      }\n      @media (max-width: 768px) {\n        width: 100%;\n      }\n      @media (max-width: 600px) {\n        margin-left: 10px;\n      }\n    }\n  }\n\n  img,\n  svg,\n  .gatsby-image-wrapper {\n    width: 100%;\n    max-width: 100%;\n    vertical-align: middle;\n  }\n\n  img[alt=\"\"],\n  img:not([alt]) {\n    filter: blur(5px);\n  }\n\n  svg {\n    width: 100%;\n    height: 100%;\n    fill: currentColor;\n    vertical-align: middle;\n\n    &.feather {\n      fill: none;\n    }\n  }\n\n  a {\n    display: inline-block;\n    text-decoration: none;\n    text-decoration-skip-ink: auto;\n    color: inherit;\n    position: relative;\n    transition: var(--transition);\n\n    &:hover,\n    &:focus {\n      color: var(--green);\n    }\n\n    &.inline-link {\n      ${({ theme }) => theme.mixins.inlineLink};\n    }\n  }\n\n  button {\n    cursor: pointer;\n    border: 0;\n    border-radius: 0;\n  }\n\n  input, textarea {\n    border-radius: 0;\n    outline: 0;\n\n    &:focus {\n      outline: 0;\n    }\n    &:focus,\n    &:active {\n      &::placeholder {\n        opacity: 0.5;\n      }\n    }\n  }\n\n  p {\n    margin: 0 0 15px 0;\n\n    &:last-child,\n    &:last-of-type {\n      margin: 0;\n    }\n\n    & > a {\n      ${({ theme }) => theme.mixins.inlineLink};\n    }\n\n    & > code {\n      background-color: var(--light-navy);\n      color: var(--white);\n      font-size: var(--fz-sm);\n      border-radius: var(--border-radius);\n      padding: 0.3em 0.5em;\n    }\n  }\n\n  ul {\n    &.fancy-list {\n      padding: 0;\n      margin: 0;\n      list-style: none;\n      font-size: var(--fz-lg);\n      li {\n        position: relative;\n        padding-left: 30px;\n        margin-bottom: 10px;\n        &:before {\n          content: '▹';\n          position: absolute;\n          left: 0;\n          color: var(--green);\n        }\n      }\n    }\n  }\n\n  blockquote {\n    border-left-color: var(--green);\n    border-left-style: solid;\n    border-left-width: 1px;\n    margin-left: 0px;\n    margin-right: 0px;\n    padding-left: 1.5rem;\n\n    p {\n      font-style: italic;\n      font-size: 24px;\n    }\n  }\n\n  hr {\n    background-color: var(--lightest-navy);\n    height: 1px;\n    border-width: 0px;\n    border-style: initial;\n    border-color: initial;\n    border-image: initial;\n    margin: 1rem;\n  }\n\n  code {\n    font-family: var(--font-mono);\n    font-size: var(--fz-md);\n  }\n\n  .skip-to-content {\n    ${({ theme }) => theme.mixins.button};\n    position: absolute;\n    top: auto;\n    left: -999px;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    z-index: -99;\n\n    &:hover,\n    &:focus {\n      background-color: var(--green);\n      color: var(--navy);\n      top: 0;\n      left: 0;\n      width: auto;\n      height: auto;\n      overflow: auto;\n      z-index: 99;\n      box-shadow: none;\n      transform: none;\n    }\n  }\n\n  #logo {\n    color: var(--green);\n  }\n\n  .overline {\n    color: var(--green);\n    font-family: var(--font-mono);\n    font-size: var(--fz-md);\n    font-weight: 400;\n  }\n\n  .subtitle {\n    color: var(--green);\n    margin: 0 0 20px 0;\n    font-size: var(--fz-md);\n    font-family: var(--font-mono);\n    font-weight: 400;\n    line-height: 1.5;\n    @media (max-width: 1080px) {\n      font-size: var(--fz-sm);\n    }\n    @media (max-width: 768px) {\n      font-size: var(--fz-xs);\n    }\n\n    a {\n      ${({ theme }) => theme.mixins.inlineLink};\n      line-height: 1.5;\n    }\n  }\n\n  .breadcrumb {\n    display: flex;\n    align-items: center;\n    margin-bottom: 50px;\n    color: var(--green);\n\n    .arrow {\n      display: block;\n      margin-right: 10px;\n      padding-top: 4px;\n    }\n\n    a {\n      ${({ theme }) => theme.mixins.inlineLink};\n      font-family: var(--font-mono);\n      font-size: var(--fz-sm);\n      font-weight: 600;\n      line-height: 1.5;\n      text-transform: uppercase;\n      letter-spacing: 0.1em;\n    }\n  }\n\n  .gatsby-image-outer-wrapper {\n    height: 100%;\n  }\n\n  ${TransitionStyles};\n\n  ${PrismStyles};\n`;\n\nexport default GlobalStyle;\n","size_bytes":8129},"src/styles/PrismStyles.js":{"content":"import { css } from 'styled-components';\n\nconst prismColors = {\n  bg: `#112340`,\n  lineHighlight: `#1d2d50`,\n  blue: `#5ccfe6`,\n  purple: `#c3a6ff`,\n  green: `#bae67e`,\n  yellow: `#ffd580`,\n  orange: `#ffae57`,\n  red: `#ef6b73`,\n  grey: `#a2aabc`,\n  comment: `#8695b799`,\n};\n\n// https://www.gatsbyjs.org/packages/gatsby-remark-prismjs\n\nconst PrismStyles = css`\n  /**\n  * Add back the container background-color, border-radius, padding, margin\n  * and overflow that we removed from <pre>.\n  */\n  .gatsby-highlight {\n    background-color: ${prismColors.bg};\n    color: ${prismColors.grey};\n    border-radius: var(--border-radius);\n    margin: 2em 0;\n    padding: 1.25em;\n    overflow: auto;\n    position: relative;\n    font-family: var(--font-mono);\n    font-size: var(--fz-md);\n  }\n\n  .gatsby-highlight code[class*='language-'],\n  .gatsby-highlight pre[class*='language-'] {\n    height: auto !important;\n    font-size: var(--fz-sm);\n    line-height: 1.5;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    tab-size: 2;\n    hyphens: none;\n  }\n\n  /**\n  * Remove the default PrismJS theme background-color, border-radius, margin,\n  * padding and overflow.\n  * 1. Make the element just wide enough to fit its content.\n  * 2. Always fill the visible space in .gatsby-highlight.\n  * 3. Adjust the position of the line numbers\n  */\n  .gatsby-highlight pre[class*='language-'] {\n    background-color: transparent;\n    margin: 0;\n    padding: 0;\n    overflow: initial;\n    float: left; /* 1 */\n    min-width: 100%; /* 2 */\n    padding-top: 2em;\n  }\n\n  /* File names */\n  .gatsby-code-title {\n    padding: 1em 1.5em;\n    font-family: var(--font-mono);\n    font-size: var(--fz-xs);\n    background-color: ${prismColors.bg};\n    color: ${prismColors.grey};\n    border-top-left-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n    border-bottom: 1px solid ${prismColors.lineHighlight};\n\n    & + .gatsby-highlight {\n      margin-top: 0;\n      border-top-left-radius: 0;\n      border-top-right-radius: 0;\n    }\n  }\n\n  /* Line highlighting */\n  .gatsby-highlight-code-line {\n    display: block;\n    background-color: ${prismColors.lineHighlight};\n    border-left: 2px solid var(--green);\n    padding-left: calc(1em + 2px);\n    padding-right: 1em;\n    margin-right: -1.35em;\n    margin-left: -1.35em;\n  }\n\n  /* Language badges */\n  .gatsby-highlight pre[class*='language-']::before {\n    background: var(--lightest-navy);\n    color: var(--white);\n    font-size: var(--fz-xxs);\n    font-family: var(--font-mono);\n    line-height: 1.5;\n    letter-spacing: 0.1em;\n    text-transform: uppercase;\n    border-radius: 0 0 3px 3px;\n    position: absolute;\n    top: 0;\n    left: 1.25rem;\n    padding: 0.25rem 0.5rem;\n  }\n  .gatsby-highlight pre[class='language-javascript']::before {\n    content: 'js';\n  }\n  .gatsby-highlight pre[class='language-js']::before {\n    content: 'js';\n  }\n  .gatsby-highlight pre[class='language-jsx']::before {\n    content: 'jsx';\n  }\n  .gatsby-highlight pre[class='language-graphql']::before {\n    content: 'GraphQL';\n  }\n  .gatsby-highlight pre[class='language-html']::before {\n    content: 'html';\n  }\n  .gatsby-highlight pre[class='language-css']::before {\n    content: 'css';\n  }\n  .gatsby-highlight pre[class='language-mdx']::before {\n    content: 'mdx';\n  }\n  .gatsby-highlight pre[class='language-shell']::before {\n    content: 'shell';\n  }\n  .gatsby-highlight pre[class='language-sh']::before {\n    content: 'sh';\n  }\n  .gatsby-highlight pre[class='language-bash']::before {\n    content: 'bash';\n  }\n  .gatsby-highlight pre[class='language-yaml']::before {\n    content: 'yaml';\n  }\n  .gatsby-highlight pre[class='language-markdown']::before {\n    content: 'md';\n  }\n  .gatsby-highlight pre[class='language-json']::before,\n  .gatsby-highlight pre[class='language-json5']::before {\n    content: 'json';\n  }\n  .gatsby-highlight pre[class='language-diff']::before {\n    content: 'diff';\n  }\n  .gatsby-highlight pre[class='language-text']::before {\n    content: 'text';\n  }\n  .gatsby-highlight pre[class='language-flow']::before {\n    content: 'flow';\n  }\n\n  /* Prism Styles */\n  .token {\n    display: inline;\n  }\n  .token.comment,\n  .token.block-comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: ${prismColors.comment};\n  }\n  .token.punctuation {\n    color: ${prismColors.grey};\n  }\n  .token.namespace,\n  .token.deleted {\n    color: ${prismColors.red};\n  }\n  .token.function-name,\n  .token.function,\n  .token.class-name,\n  .token.constant,\n  .token.symbol {\n    color: ${prismColors.yellow};\n  }\n  .token.attr-name,\n  .token.operator,\n  .token.rule {\n    color: ${prismColors.orange};\n  }\n  .token.keyword,\n  .token.boolean,\n  .token.number,\n  .token.property {\n    color: ${prismColors.purple};\n  }\n  .token.tag,\n  .token.selector,\n  .token.important,\n  .token.atrule,\n  .token.builtin,\n  .token.entity,\n  .token.url {\n    color: ${prismColors.blue};\n  }\n  .token.string,\n  .token.char,\n  .token.attr-value,\n  .token.regex,\n  .token.variable,\n  .token.inserted {\n    color: ${prismColors.green};\n  }\n  .token.important,\n  .token.bold {\n    font-weight: 600;\n  }\n  .token.italic {\n    font-style: italic;\n  }\n  .token.entity {\n    cursor: help;\n  }\n  .namespace {\n    opacity: 0.7;\n  }\n`;\n\nexport default PrismStyles;\n","size_bytes":5327},"src/styles/TransitionStyles.js":{"content":"import { css } from 'styled-components';\n\n// https://reactcommunity.org/react-transition-group/css-transition\n\nconst TransitionStyles = css`\n  /* Fade up */\n  .fadeup-enter {\n    opacity: 0.01;\n    transform: translateY(20px);\n    transition: opacity 300ms var(--easing), transform 300ms var(--easing);\n  }\n\n  .fadeup-enter-active {\n    opacity: 1;\n    transform: translateY(0px);\n    transition: opacity 300ms var(--easing), transform 300ms var(--easing);\n  }\n\n  /* Fade down */\n  .fadedown-enter {\n    opacity: 0.01;\n    transform: translateY(-20px);\n    transition: opacity 300ms var(--easing), transform 300ms var(--easing);\n  }\n\n  .fadedown-enter-active {\n    opacity: 1;\n    transform: translateY(0px);\n    transition: opacity 300ms var(--easing), transform 300ms var(--easing);\n  }\n\n  /* Fade */\n  .fade-enter {\n    opacity: 0;\n  }\n  .fade-enter-active {\n    opacity: 1;\n    transition: opacity 300ms var(--easing);\n  }\n  .fade-exit {\n    opacity: 1;\n  }\n  .fade-exit-active {\n    opacity: 0;\n    transition: opacity 300ms var(--easing);\n  }\n`;\n\nexport default TransitionStyles;\n","size_bytes":1086},"src/styles/fonts.js":{"content":"import { css } from 'styled-components';\n\nimport CalibreRegularWoff from '../fonts/Calibre/Calibre-Regular.woff';\nimport CalibreRegularWoff2 from '../fonts/Calibre/Calibre-Regular.woff2';\nimport CalibreMediumWoff from '../fonts/Calibre/Calibre-Medium.woff';\nimport CalibreMediumWoff2 from '../fonts/Calibre/Calibre-Medium.woff2';\nimport CalibreSemiboldWoff from '../fonts/Calibre/Calibre-Semibold.woff';\nimport CalibreSemiboldWoff2 from '../fonts/Calibre/Calibre-Semibold.woff2';\n\nimport CalibreRegularItalicWoff from '../fonts/Calibre/Calibre-RegularItalic.woff';\nimport CalibreRegularItalicWoff2 from '../fonts/Calibre/Calibre-RegularItalic.woff2';\nimport CalibreMediumItalicWoff from '../fonts/Calibre/Calibre-MediumItalic.woff';\nimport CalibreMediumItalicWoff2 from '../fonts/Calibre/Calibre-MediumItalic.woff2';\nimport CalibreSemiboldItalicWoff from '../fonts/Calibre/Calibre-SemiboldItalic.woff';\nimport CalibreSemiboldItalicWoff2 from '../fonts/Calibre/Calibre-SemiboldItalic.woff2';\n\nimport SFMonoRegularWoff from '../fonts/SFMono/SFMono-Regular.woff';\nimport SFMonoRegularWoff2 from '../fonts/SFMono/SFMono-Regular.woff2';\nimport SFMonoSemiboldWoff from '../fonts/SFMono/SFMono-Semibold.woff';\nimport SFMonoSemiboldWoff2 from '../fonts/SFMono/SFMono-Semibold.woff2';\n\nimport SFMonoRegularItalicWoff from '../fonts/SFMono/SFMono-RegularItalic.woff';\nimport SFMonoRegularItalicWoff2 from '../fonts/SFMono/SFMono-RegularItalic.woff2';\nimport SFMonoSemiboldItalicWoff from '../fonts/SFMono/SFMono-SemiboldItalic.woff';\nimport SFMonoSemiboldItalicWoff2 from '../fonts/SFMono/SFMono-SemiboldItalic.woff2';\n\nconst calibreNormalWeights = {\n  400: [CalibreRegularWoff, CalibreRegularWoff2],\n  500: [CalibreMediumWoff, CalibreMediumWoff2],\n  600: [CalibreSemiboldWoff, CalibreSemiboldWoff2],\n};\n\nconst calibreItalicWeights = {\n  400: [CalibreRegularItalicWoff, CalibreRegularItalicWoff2],\n  500: [CalibreMediumItalicWoff, CalibreMediumItalicWoff2],\n  600: [CalibreSemiboldItalicWoff, CalibreSemiboldItalicWoff2],\n};\n\nconst sfMonoNormalWeights = {\n  400: [SFMonoRegularWoff, SFMonoRegularWoff2],\n  600: [SFMonoSemiboldWoff, SFMonoSemiboldWoff2],\n};\n\nconst sfMonoItalicWeights = {\n  400: [SFMonoRegularItalicWoff, SFMonoRegularItalicWoff2],\n  600: [SFMonoSemiboldItalicWoff, SFMonoSemiboldItalicWoff2],\n};\n\nconst calibre = {\n  name: 'Calibre',\n  normal: calibreNormalWeights,\n  italic: calibreItalicWeights,\n};\n\nconst sfMono = {\n  name: 'SF Mono',\n  normal: sfMonoNormalWeights,\n  italic: sfMonoItalicWeights,\n};\n\nconst createFontFaces = (family, style = 'normal') => {\n  let styles = '';\n\n  for (const [weight, formats] of Object.entries(family[style])) {\n    const woff = formats[0];\n    const woff2 = formats[1];\n\n    styles += `\n      @font-face {\n        font-family: '${family.name}';\n        src: url(${woff2}) format('woff2'),\n            url(${woff}) format('woff');\n        font-weight: ${weight};\n        font-style: ${style};\n        font-display: auto;\n      }\n    `;\n  }\n\n  return styles;\n};\n\nconst calibreNormal = createFontFaces(calibre);\nconst calibreItalic = createFontFaces(calibre, 'italic');\n\nconst sfMonoNormal = createFontFaces(sfMono);\nconst sfMonoItalic = createFontFaces(sfMono, 'italic');\n\nconst Fonts = css`\n  ${calibreNormal + calibreItalic + sfMonoNormal + sfMonoItalic}\n`;\n\nexport default Fonts;\n","size_bytes":3324},"src/styles/index.js":{"content":"export { default as theme } from './theme';\nexport { default as GlobalStyle } from './GlobalStyle';\nexport { default as mixins } from './mixins';\n","size_bytes":146},"src/styles/mixins.js":{"content":"import { css } from 'styled-components';\n\nconst button = css`\n  color: var(--green);\n  background-color: transparent;\n  border: 1px solid var(--green);\n  border-radius: var(--border-radius);\n  font-size: var(--fz-xs);\n  font-family: var(--font-mono);\n  line-height: 1;\n  text-decoration: none;\n  padding: 1.25rem 1.75rem;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus-visible {\n    outline: none;\n    box-shadow: 4px 4px 0 0 var(--green);\n    transform: translate(-5px, -5px);\n  }\n  &:after {\n    display: none !important;\n  }\n`;\n\nconst mixins = {\n  flexCenter: css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `,\n\n  flexBetween: css`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `,\n\n  link: css`\n    display: inline-block;\n    text-decoration: none;\n    text-decoration-skip-ink: auto;\n    color: inherit;\n    position: relative;\n    transition: var(--transition);\n\n    &:hover,\n    &:focus-visible {\n      color: var(--green);\n      outline: 0;\n    }\n  `,\n\n  inlineLink: css`\n    display: inline-block;\n    position: relative;\n    color: var(--green);\n    transition: var(--transition);\n\n    &:hover,\n    &:focus-visible {\n      color: var(--green);\n      outline: 0;\n      &:after {\n        width: 100%;\n      }\n      & > * {\n        color: var(--green) !important;\n        transition: var(--transition);\n      }\n    }\n    &:after {\n      content: '';\n      display: block;\n      width: 0;\n      height: 1px;\n      position: relative;\n      bottom: 0.37em;\n      background-color: var(--green);\n      opacity: 0.5;\n      @media (prefers-reduced-motion: no-preference) {\n        transition: var(--transition);\n      }\n    }\n  `,\n\n  button,\n\n  smallButton: css`\n    color: var(--green);\n    background-color: transparent;\n    border: 1px solid var(--green);\n    border-radius: var(--border-radius);\n    padding: 0.75rem 1rem;\n    font-size: var(--fz-xs);\n    font-family: var(--font-mono);\n    line-height: 1;\n    text-decoration: none;\n    transition: var(--transition);\n\n    &:hover,\n    &:focus-visible {\n      outline: none;\n      box-shadow: 3px 3px 0 0 var(--green);\n      transform: translate(-4px, -4px);\n    }\n    &:after {\n      display: none !important;\n    }\n  `,\n\n  bigButton: css`\n    color: var(--green);\n    background-color: transparent;\n    border: 1px solid var(--green);\n    border-radius: var(--border-radius);\n    padding: 1.25rem 1.75rem;\n    font-size: var(--fz-sm);\n    font-family: var(--font-mono);\n    line-height: 1;\n    text-decoration: none;\n    transition: var(--transition);\n\n    &:hover,\n    &:focus-visible {\n      outline: none;\n      box-shadow: 4px 4px 0 0 var(--green);\n      transform: translate(-5px, -5px);\n    }\n    &:after {\n      display: none !important;\n    }\n  `,\n\n  boxShadow: css`\n    box-shadow: 0 10px 30px -15px var(--navy-shadow);\n    transition: var(--transition);\n\n    &:hover,\n    &:focus-visible {\n      box-shadow: 0 20px 30px -15px var(--navy-shadow);\n    }\n  `,\n\n  fancyList: css`\n    padding: 0;\n    margin: 0;\n    list-style: none;\n    font-size: var(--fz-lg);\n    li {\n      position: relative;\n      padding-left: 30px;\n      margin-bottom: 10px;\n      &:before {\n        content: '▹';\n        position: absolute;\n        left: 0;\n        color: var(--green);\n      }\n    }\n  `,\n\n  resetList: css`\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  `,\n};\n\nexport default mixins;\n","size_bytes":3428},"src/styles/theme.js":{"content":"import mixins from './mixins';\n\nconst theme = {\n  bp: {\n    mobileS: `max-width: 330px`,\n    mobileM: `max-width: 400px`,\n    mobileL: `max-width: 480px`,\n    tabletS: `max-width: 600px`,\n    tabletL: `max-width: 768px`,\n    desktopXS: `max-width: 900px`,\n    desktopS: `max-width: 1080px`,\n    desktopM: `max-width: 1200px`,\n    desktopL: `max-width: 1400px`,\n  },\n\n  mixins,\n};\n\nexport default theme;\n","size_bytes":403},"src/styles/variables.js":{"content":"import { css } from 'styled-components';\n\nconst variables = css`\n  :root {\n    --dark-navy: #020c1b;\n    --navy: #0a192f;\n    --light-navy: #112240;\n    --lightest-navy: #233554;\n    --navy-shadow: rgba(2, 12, 27, 0.7);\n    --dark-slate: #495670;\n    --slate: #8892b0;\n    --light-slate: #a8b2d1;\n    --lightest-slate: #ccd6f6;\n    --white: #e6f1ff;\n    --green: #64ffda;\n    --green-tint: rgba(100, 255, 218, 0.1);\n    --pink: #f57dff;\n    --blue: #57cbff;\n\n    --font-sans: 'Calibre', 'Inter', 'San Francisco', 'SF Pro Text', -apple-system, system-ui,\n      sans-serif;\n    --font-mono: 'SF Mono', 'Fira Code', 'Fira Mono', 'Roboto Mono', monospace;\n\n    --fz-xxs: 12px;\n    --fz-xs: 13px;\n    --fz-sm: 14px;\n    --fz-md: 16px;\n    --fz-lg: 18px;\n    --fz-xl: 20px;\n    --fz-xxl: 22px;\n    --fz-heading: 32px;\n\n    --border-radius: 4px;\n    --nav-height: 100px;\n    --nav-scroll-height: 70px;\n\n    --tab-height: 42px;\n    --tab-width: 120px;\n\n    --easing: cubic-bezier(0.645, 0.045, 0.355, 1);\n    --transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);\n\n    --hamburger-width: 30px;\n\n    --ham-before: top 0.1s ease-in 0.25s, opacity 0.1s ease-in;\n    --ham-before-active: top 0.1s ease-out, opacity 0.1s ease-out 0.12s;\n    --ham-after: bottom 0.1s ease-in 0.25s, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n    --ham-after-active: bottom 0.1s ease-out,\n      transform 0.22s cubic-bezier(0.215, 0.61, 0.355, 1) 0.12s;\n  }\n`;\n\nexport default variables;\n","size_bytes":1476},"src/utils/index.js":{"content":"export const hex2rgba = (hex, alpha = 1) => {\n  const [r, g, b] = hex.match(/\\w\\w/g).map(x => parseInt(x, 16));\n  return `rgba(${r},${g},${b},${alpha})`;\n};\n\nexport const navDelay = 1000;\nexport const loaderDelay = 500;\n\nexport const KEY_CODES = {\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_LEFT_IE11: 'Left',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_RIGHT_IE11: 'Right',\n  ARROW_UP: 'ArrowUp',\n  ARROW_UP_IE11: 'Up',\n  ARROW_DOWN: 'ArrowDown',\n  ARROW_DOWN_IE11: 'Down',\n  ESCAPE: 'Escape',\n  ESCAPE_IE11: 'Esc',\n  TAB: 'Tab',\n  SPACE: ' ',\n  SPACE_IE11: 'Spacebar',\n  ENTER: 'Enter',\n};\n","size_bytes":577},"src/utils/sr.js":{"content":"import ScrollReveal from 'scrollreveal';\n\nconst isSSR = typeof window === 'undefined';\nconst sr = isSSR ? null : ScrollReveal();\n\nexport default sr;\n","size_bytes":149},"src/components/icons/appstore.js":{"content":"import React from 'react';\n\nconst IconAppStore = () => (\n  <svg\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 512 512\"\n    xmlSpace=\"preserve\">\n    <title>Apple App Store</title>\n    <g>\n      <g>\n        <path\n          d=\"M407,0H105C47.103,0,0,47.103,0,105v302c0,57.897,47.103,105,105,105h302c57.897,0,105-47.103,105-105V105\n      C512,47.103,464.897,0,407,0z M482,407c0,41.355-33.645,75-75,75H105c-41.355,0-75-33.645-75-75V105c0-41.355,33.645-75,75-75h302\n      c41.355,0,75,33.645,75,75V407z\"\n        />\n      </g>\n    </g>\n    <g>\n      <g>\n        <path\n          d=\"M305.646,123.531c-1.729-6.45-5.865-11.842-11.648-15.18c-11.936-6.892-27.256-2.789-34.15,9.151L256,124.166\n      l-3.848-6.665c-6.893-11.937-22.212-16.042-34.15-9.151h-0.001c-11.938,6.893-16.042,22.212-9.15,34.151l18.281,31.664\n      L159.678,291H110.5c-13.785,0-25,11.215-25,25c0,13.785,11.215,25,25,25h189.86l-28.868-50h-54.079l85.735-148.498\n      C306.487,136.719,307.375,129.981,305.646,123.531z\"\n        />\n      </g>\n    </g>\n    <g>\n      <g>\n        <path\n          d=\"M401.5,291h-49.178l-55.907-96.834l-28.867,50l86.804,150.348c3.339,5.784,8.729,9.921,15.181,11.65\n      c2.154,0.577,4.339,0.863,6.511,0.863c4.332,0,8.608-1.136,12.461-3.361c11.938-6.893,16.042-22.213,9.149-34.15L381.189,341\n      H401.5c13.785,0,25-11.215,25-25C426.5,302.215,415.285,291,401.5,291z\"\n        />\n      </g>\n    </g>\n    <g>\n      <g>\n        <path\n          d=\"M119.264,361l-4.917,8.516c-6.892,11.938-2.787,27.258,9.151,34.15c3.927,2.267,8.219,3.345,12.458,3.344\n      c8.646,0,17.067-4.484,21.693-12.495L176.999,361H119.264z\"\n        />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default IconAppStore;\n","size_bytes":1717},"src/components/icons/bookmark.js":{"content":"import React from 'react';\n\nconst IconBookmark = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"1\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"feather feather-bookmark\">\n    <title>Bookmark</title>\n    <path d=\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"></path>\n  </svg>\n);\n\nexport default IconBookmark;\n","size_bytes":426},"src/components/icons/codepen.js":{"content":"import React from 'react';\n\nconst IconCodepen = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"feather feather-codepen\">\n    <title>CodePen</title>\n    <polygon points=\"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\"></polygon>\n    <line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"15.5\"></line>\n    <polyline points=\"22 8.5 12 15.5 2 8.5\"></polyline>\n    <polyline points=\"2 15.5 12 8.5 22 15.5\"></polyline>\n    <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"8.5\"></line>\n  </svg>\n);\n\nexport default IconCodepen;\n","size_bytes":657},"src/components/icons/external.js":{"content":"import React from 'react';\n\nconst IconExternal = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"feather feather-external-link\">\n    <title>External Link</title>\n    <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path>\n    <polyline points=\"15 3 21 3 21 9\"></polyline>\n    <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line>\n  </svg>\n);\n\nexport default IconExternal;\n","size_bytes":557},"src/components/icons/folder.js":{"content":"import React from 'react';\n\nconst IconFolder = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"1\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"feather feather-folder\">\n    <title>Folder</title>\n    <path d=\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"></path>\n  </svg>\n);\n\nexport default IconFolder;\n","size_bytes":459},"src/components/icons/fork.js":{"content":"import React from 'react';\n\nconst IconFork = () => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"feather feather-git-branch\">\n    <title>Git Fork</title>\n    <line x1=\"6\" y1=\"3\" x2=\"6\" y2=\"15\"></line>\n    <circle cx=\"18\" cy=\"6\" r=\"3\"></circle>\n    <circle cx=\"6\" cy=\"18\" r=\"3\"></circle>\n    <path d=\"M18 9a9 9 0 0 1-9 9\"></path>\n  </svg>\n);\n\nexport default IconFork;\n","size_bytes":484},"src/components/icons/github.js":{"content":"import React from 'react';\n\nconst IconGitHub = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"feather feather-github\">\n    <title>GitHub</title>\n    <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>\n  </svg>\n);\n\nexport default IconGitHub;\n","size_bytes":675},"src/components/icons/hex.js":{"content":"import React from 'react';\n\nconst IconHex = () => (\n  <svg id=\"hex\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 84 96\">\n    <title>Hexagon</title>\n    <g transform=\"translate(-8.000000, -2.000000)\">\n      <g transform=\"translate(11.000000, 5.000000)\">\n        <polygon\n          stroke=\"currentColor\"\n          strokeWidth=\"5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          points=\"39 0 0 22 0 67 39 90 78 68 78 23\"\n          fill=\"currentColor\"\n        />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default IconHex;\n","size_bytes":557},"src/components/icons/icon.js":{"content":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  IconAppStore,\n  IconBookmark,\n  IconCodepen,\n  IconExternal,\n  IconFolder,\n  IconFork,\n  IconGitHub,\n  IconInstagram,\n  IconLinkedin,\n  IconLoader,\n  IconLogo,\n  IconPlayStore,\n  IconStar,\n  IconTwitter,\n} from '.';\n\nconst Icon = ({ name }) => {\n  switch (name) {\n    case 'AppStore':\n      return <IconAppStore />;\n    case 'Bookmark':\n      return <IconBookmark />;\n    case 'Codepen':\n      return <IconCodepen />;\n    case 'External':\n      return <IconExternal />;\n    case 'Folder':\n      return <IconFolder />;\n    case 'Fork':\n      return <IconFork />;\n    case 'GitHub':\n      return <IconGitHub />;\n    case 'Instagram':\n      return <IconInstagram />;\n    case 'Linkedin':\n      return <IconLinkedin />;\n    case 'Loader':\n      return <IconLoader />;\n    case 'Logo':\n      return <IconLogo />;\n    case 'PlayStore':\n      return <IconPlayStore />;\n    case 'Star':\n      return <IconStar />;\n    case 'Twitter':\n      return <IconTwitter />;\n    default:\n      return <IconExternal />;\n  }\n};\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default Icon;\n","size_bytes":1163},"src/components/icons/index.js":{"content":"export { default as IconAppStore } from './appstore';\nexport { default as IconBookmark } from './bookmark';\nexport { default as IconCodepen } from './codepen';\nexport { default as IconExternal } from './external';\nexport { default as IconFolder } from './folder';\nexport { default as IconFork } from './fork';\nexport { default as Icon } from './icon';\nexport { default as IconGitHub } from './github';\nexport { default as IconHex } from './hex';\nexport { default as IconInstagram } from './instagram';\nexport { default as IconLinkedin } from './linkedin';\nexport { default as IconLoader } from './loader';\nexport { default as IconLogo } from './logo';\nexport { default as IconPlayStore } from './playstore';\nexport { default as IconStar } from './star';\nexport { default as IconTwitter } from './twitter';\n","size_bytes":806},"src/components/icons/instagram.js":{"content":"import React from 'react';\n\nconst IconInstagram = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"feather feather-instagram\">\n    <title>Instagram</title>\n    <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect>\n    <path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path>\n    <line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line>\n  </svg>\n);\n\nexport default IconInstagram;\n","size_bytes":567},"src/components/icons/linkedin.js":{"content":"import React from 'react';\n\nconst IconLinkedin = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"feather feather-linkedin\">\n    <title>LinkedIn</title>\n    <path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"></path>\n    <rect x=\"2\" y=\"9\" width=\"4\" height=\"12\"></rect>\n    <circle cx=\"4\" cy=\"4\" r=\"2\"></circle>\n  </svg>\n);\n\nexport default IconLinkedin;\n","size_bytes":564},"src/components/icons/loader.js":{"content":"import React from 'react';\n\nconst IconLoader = () => (\n  <svg id=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n    <title>Loader Logo</title>\n    <g>\n      <g id=\"B\" transform=\"translate(11.000000, 5.000000)\">\n        <path\n          d=\"M45.691667,45.15 C48.591667,46.1 50.691667,48.95 50.691667,52.2 C50.691667,57.95 46.691667,61 40.291667,61 L28.541667,61 L28.541667,30.3 L39.291667,30.3 C45.691667,30.3 49.691667,33.15 49.691667,38.65 C49.691667,41.95 47.941667,44.35 45.691667,45.15 Z M33.591667,43.2 L39.241667,43.2 C42.791667,43.2 44.691667,41.85 44.691667,38.95 C44.691667,36.05 42.791667,34.8 39.241667,34.8 L33.591667,34.8 L33.591667,43.2 Z M33.591667,47.5 L33.591667,56.5 L40.191667,56.5 C43.691667,56.5 45.591667,54.75 45.591667,52 C45.591667,49.2 43.691667,47.5 40.191667,47.5 L33.591667,47.5 Z\"\n          fill=\"currentColor\"\n        />\n      </g>\n      <path\n        stroke=\"currentColor\"\n        strokeWidth=\"5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M 50, 5\n                  L 11, 27\n                  L 11, 72\n                  L 50, 95\n                  L 89, 73\n                  L 89, 28 z\"\n      />\n    </g>\n  </svg>\n);\n\nexport default IconLoader;\n","size_bytes":1221},"src/components/icons/logo.js":{"content":"import React from 'react';\n\nconst IconLogo = () => (\n  <svg id=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 84 96\">\n    <title>Logo</title>\n    <g transform=\"translate(-8.000000, -2.000000)\">\n      <g transform=\"translate(11.000000, 5.000000)\">\n        <polygon\n          id=\"Shape\"\n          stroke=\"currentColor\"\n          strokeWidth=\"5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          points=\"39 0 0 22 0 67 39 90 78 68 78 23\"\n        />\n        <path\n          d=\"M45.691667,45.15 C48.591667,46.1 50.691667,48.95 50.691667,52.2 C50.691667,57.95 46.691667,61 40.291667,61 L28.541667,61 L28.541667,30.3 L39.291667,30.3 C45.691667,30.3 49.691667,33.15 49.691667,38.65 C49.691667,41.95 47.941667,44.35 45.691667,45.15 Z M33.591667,43.2 L39.241667,43.2 C42.791667,43.2 44.691667,41.85 44.691667,38.95 C44.691667,36.05 42.791667,34.8 39.241667,34.8 L33.591667,34.8 L33.591667,43.2 Z M33.591667,47.5 L33.591667,56.5 L40.191667,56.5 C43.691667,56.5 45.591667,54.75 45.591667,52 C45.591667,49.2 43.691667,47.5 40.191667,47.5 L33.591667,47.5 Z\"\n          fill=\"currentColor\"\n        />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default IconLogo;\n","size_bytes":1187},"src/components/icons/playstore.js":{"content":"import React from 'react';\n\nconst IconPlayStore = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.001 512.001\">\n    <title>Google Play Store</title>\n    <path\n      d=\"M464.252,212.09L99.624,8.07C84.247-1.873,64.754-2.691,48.574,5.967C32.183,14.74,22,31.737,22,50.329v411.342\n      c0,18.592,10.183,35.59,26.573,44.361c16.097,8.617,35.593,7.891,51.052-2.101l364.628-204.022\n      c16.121-9.02,25.747-25.435,25.747-43.908C490,237.527,480.374,221.111,464.252,212.09z M341.677,181.943l-50.339,50.339\n      L113.108,54.051L341.677,181.943z M55.544,467.323V44.676L267.621,256L55.544,467.323z M113.108,457.949l178.232-178.231\n      l50.339,50.339L113.108,457.949z M447.874,270.637l-75.779,42.401l-57.038-57.037l57.037-57.037l75.778,42.4\n      c7.746,4.335,8.583,11.68,8.583,14.637C456.455,258.958,455.62,266.302,447.874,270.637z\"\n    />\n  </svg>\n);\n\nexport default IconPlayStore;\n","size_bytes":920},"src/components/icons/star.js":{"content":"import React from 'react';\n\nconst IconStar = () => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"feather feather-star\">\n    <title>Star</title>\n    <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\" />\n  </svg>\n);\n\nexport default IconStar;\n","size_bytes":419},"src/components/icons/twitter.js":{"content":"import React from 'react';\n\nconst IconTwitter = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"feather feather-twitter\">\n    <title>Twitter</title>\n    <path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path>\n  </svg>\n);\n\nexport default IconTwitter;\n","size_bytes":559},"src/components/sections/about.js":{"content":"import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { srConfig } from '../../config';\nimport sr from '../../utils/sr';\nimport { usePrefersReducedMotion } from '../../hooks';\n\nconst StyledAboutSection = styled.section`\n  max-width: 900px;\n\n  .inner {\n    display: grid;\n    grid-template-columns: 3fr 2fr;\n    grid-gap: 50px;\n\n    @media (max-width: 768px) {\n      display: block;\n    }\n  }\n`;\nconst StyledText = styled.div`\n  ul.skills-list {\n    display: grid;\n    grid-template-columns: repeat(2, minmax(140px, 200px));\n    grid-gap: 0 10px;\n    padding: 0;\n    margin: 20px 0 0 0;\n    overflow: hidden;\n    list-style: none;\n\n    li {\n      position: relative;\n      margin-bottom: 10px;\n      padding-left: 20px;\n      font-family: var(--font-mono);\n      font-size: var(--fz-xs);\n\n      &:before {\n        content: '▹';\n        position: absolute;\n        left: 0;\n        color: var(--green);\n        font-size: var(--fz-sm);\n        line-height: 12px;\n      }\n    }\n  }\n`;\nconst StyledPic = styled.div`\n  position: relative;\n  max-width: 300px;\n\n  @media (max-width: 768px) {\n    margin: 50px auto 0;\n    width: 70%;\n  }\n\n  .wrapper {\n    ${({ theme }) => theme.mixins.boxShadow};\n    display: block;\n    position: relative;\n    width: 100%;\n    border-radius: var(--border-radius);\n    background-color: var(--green);\n\n    &:hover,\n    &:focus {\n      outline: 0;\n      transform: translate(-4px, -4px);\n\n      &:after {\n        transform: translate(8px, 8px);\n      }\n\n      .img {\n        filter: none;\n        mix-blend-mode: normal;\n      }\n    }\n\n    .img {\n      position: relative;\n      border-radius: var(--border-radius);\n      mix-blend-mode: multiply;\n      filter: grayscale(100%) contrast(1);\n      transition: var(--transition);\n    }\n\n    &:before,\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      border-radius: var(--border-radius);\n      transition: var(--transition);\n    }\n\n    &:before {\n      top: 0;\n      left: 0;\n      background-color: var(--navy);\n      mix-blend-mode: screen;\n    }\n\n    &:after {\n      border: 2px solid var(--green);\n      top: 14px;\n      left: 14px;\n      z-index: -1;\n    }\n  }\n`;\n\nconst About = () => {\n  const revealContainer = useRef(null);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealContainer.current, srConfig());\n  }, []);\n\n  const skills = ['Python', 'Machine Learning', 'Deep Learning', 'RAG', 'LLMs', 'Data Science'];\n\n  return (\n    <StyledAboutSection id=\"about\" ref={revealContainer}>\n      <h2 className=\"numbered-heading\">About Me</h2>\n\n      <div className=\"inner\">\n        <StyledText>\n          <div>\n            <p>\n              Hello! My name is Sidheshwar and I'm an AI/ML Engineer passionate about building intelligent systems that solve real-world problems. My journey in artificial intelligence began when I discovered the power of machine learning to extract meaningful insights from data.\n            </p>\n\n            <p>\n              I specialize in Large Language Models (LLMs), Retrieval-Augmented Generation (RAG), and multimodal AI applications. Currently, I'm working as a Machine Learning Intern at{' '}\n              <a href=\"https://www.drdo.gov.in/\">Defence Research and Development Organisation (DRDO)</a>, where I design ML pipelines to predict material properties from experimental data with high accuracy.\n            </p>\n\n            <p>\n              My expertise spans across the entire ML pipeline, from data preprocessing and feature engineering to model deployment. I have hands-on experience with various AI technologies including Hugging Face Transformers, LangChain, and vector databases like FAISS and Chroma.\n            </p>\n\n            <p>Here are a few technologies I've been working with recently:</p>\n          </div>\n\n          <ul className=\"skills-list\">\n            {skills && skills.map((skill, i) => <li key={i}>{skill}</li>)}\n          </ul>\n        </StyledText>\n\n        <StyledPic>\n          <div className=\"wrapper\">\n            <img\n              className=\"img\"\n              src=\"https://picsum.photos/500/500?random=8\"\n              width={500}\n              alt=\"Sidheshwar Sharma\"\n            />\n          </div>\n        </StyledPic>\n      </div>\n    </StyledAboutSection>\n  );\n};\n\nexport default About;\n","size_bytes":4473},"src/components/sections/contact.js":{"content":"import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { srConfig, email } from '../../config';\nimport sr from '../../utils/sr';\nimport { usePrefersReducedMotion } from '../../hooks';\n\nconst StyledContactSection = styled.section`\n  max-width: 600px;\n  margin: 0 auto 100px;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    margin: 0 auto 50px;\n  }\n\n  .overline {\n    display: block;\n    margin-bottom: 20px;\n    color: var(--green);\n    font-family: var(--font-mono);\n    font-size: var(--fz-md);\n    font-weight: 400;\n\n    &:before {\n      bottom: 0;\n      font-size: var(--fz-sm);\n    }\n\n    &:after {\n      display: none;\n    }\n  }\n\n  .title {\n    font-size: clamp(40px, 5vw, 60px);\n  }\n\n  .email-link {\n    ${({ theme }) => theme.mixins.bigButton};\n    margin-top: 50px;\n  }\n`;\n\nconst Contact = () => {\n  const revealContainer = useRef(null);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealContainer.current, srConfig());\n  }, []);\n\n  return (\n    <StyledContactSection id=\"contact\" ref={revealContainer}>\n      <h2 className=\"numbered-heading overline\">What’s Next?</h2>\n\n      <h2 className=\"title\">Get In Touch</h2>\n\n      <p>\n        Although I’m not currently looking for any new opportunities, my inbox is always open.\n        Whether you have a question or just want to say hi, I’ll try my best to get back to you!\n      </p>\n\n      <a className=\"email-link\" href={`mailto:${email}`}>\n        Say Hello\n      </a>\n    </StyledContactSection>\n  );\n};\n\nexport default Contact;\n","size_bytes":1647},"src/components/sections/featured.js":{"content":"import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport sr from '../../utils/sr';\nimport { srConfig } from '../../config';\nimport { Icon } from '../../components/icons';\nimport { usePrefersReducedMotion } from '../../hooks';\nimport { featuredData } from '../../data';\n\nconst StyledProjectsGrid = styled.ul`\n  ${({ theme }) => theme.mixins.resetList};\n\n  a {\n    position: relative;\n    z-index: 1;\n  }\n`;\n\nconst StyledProject = styled.li`\n  position: relative;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(12, 1fr);\n  align-items: center;\n\n  @media (max-width: 768px) {\n    ${({ theme }) => theme.mixins.boxShadow};\n  }\n\n  &:not(:last-of-type) {\n    margin-bottom: 100px;\n\n    @media (max-width: 768px) {\n      margin-bottom: 70px;\n    }\n\n    @media (max-width: 480px) {\n      margin-bottom: 30px;\n    }\n  }\n\n  &:nth-of-type(odd) {\n    .project-content {\n      grid-column: 7 / -1;\n      text-align: right;\n\n      @media (max-width: 1080px) {\n        grid-column: 5 / -1;\n      }\n      @media (max-width: 768px) {\n        grid-column: 1 / -1;\n        padding: 40px 40px 30px;\n        text-align: left;\n      }\n      @media (max-width: 480px) {\n        padding: 25px 25px 20px;\n      }\n    }\n    .project-tech-list {\n      justify-content: flex-end;\n\n      @media (max-width: 768px) {\n        justify-content: flex-start;\n      }\n\n      li {\n        margin: 0 0 5px 20px;\n\n        @media (max-width: 768px) {\n          margin: 0 10px 5px 0;\n        }\n      }\n    }\n    .project-links {\n      justify-content: flex-end;\n      margin-left: 0;\n      margin-right: -10px;\n\n      @media (max-width: 768px) {\n        justify-content: flex-start;\n        margin-left: -10px;\n        margin-right: 0;\n      }\n    }\n    .project-image {\n      grid-column: 1 / 8;\n\n      @media (max-width: 768px) {\n        grid-column: 1 / -1;\n      }\n    }\n  }\n\n  .project-content {\n    position: relative;\n    grid-column: 1 / 7;\n    grid-row: 1 / -1;\n\n    @media (max-width: 1080px) {\n      grid-column: 1 / 9;\n    }\n\n    @media (max-width: 768px) {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      height: 100%;\n      grid-column: 1 / -1;\n      padding: 40px 40px 30px;\n      z-index: 5;\n    }\n\n    @media (max-width: 480px) {\n      padding: 30px 25px 20px;\n    }\n  }\n\n  .project-overline {\n    margin: 10px 0;\n    color: var(--green);\n    font-family: var(--font-mono);\n    font-size: var(--fz-xs);\n    font-weight: 400;\n  }\n\n  .project-title {\n    color: var(--lightest-slate);\n    font-size: clamp(24px, 5vw, 28px);\n\n    @media (min-width: 768px) {\n      margin: 0 0 20px;\n    }\n\n    @media (max-width: 768px) {\n      color: var(--white);\n\n      a {\n        position: static;\n\n        &:before {\n          content: '';\n          display: block;\n          position: absolute;\n          z-index: 0;\n          width: 100%;\n          height: 100%;\n          top: 0;\n          left: 0;\n        }\n      }\n    }\n  }\n\n  .project-description {\n    ${({ theme }) => theme.mixins.boxShadow};\n    position: relative;\n    z-index: 2;\n    padding: 25px;\n    border-radius: var(--border-radius);\n    background-color: var(--light-navy);\n    color: var(--light-slate);\n    font-size: var(--fz-lg);\n\n    @media (max-width: 768px) {\n      padding: 20px 0;\n      background-color: transparent;\n      box-shadow: none;\n\n      &:hover {\n        box-shadow: none;\n      }\n    }\n\n    a {\n      ${({ theme }) => theme.mixins.inlineLink};\n    }\n\n    strong {\n      color: var(--white);\n      font-weight: normal;\n    }\n  }\n\n  .project-tech-list {\n    display: flex;\n    flex-wrap: wrap;\n    position: relative;\n    z-index: 2;\n    margin: 25px 0 10px;\n    padding: 0;\n    list-style: none;\n\n    li {\n      margin: 0 20px 5px 0;\n      color: var(--light-slate);\n      font-family: var(--font-mono);\n      font-size: var(--fz-xs);\n      white-space: nowrap;\n    }\n\n    @media (max-width: 768px) {\n      margin: 10px 0;\n\n      li {\n        margin: 0 10px 5px 0;\n        color: var(--lightest-slate);\n      }\n    }\n  }\n\n  .project-links {\n    display: flex;\n    align-items: center;\n    position: relative;\n    margin-top: 10px;\n    margin-left: -10px;\n    color: var(--lightest-slate);\n\n    a {\n      ${({ theme }) => theme.mixins.flexCenter};\n      padding: 10px;\n\n      &.external {\n        svg {\n          width: 22px;\n          height: 22px;\n          margin-top: -4px;\n        }\n      }\n\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n\n    .cta {\n      ${({ theme }) => theme.mixins.smallButton};\n      margin: 10px;\n    }\n  }\n\n  .project-image {\n    ${({ theme }) => theme.mixins.boxShadow};\n    grid-column: 6 / -1;\n    grid-row: 1 / -1;\n    position: relative;\n    z-index: 1;\n\n    @media (max-width: 768px) {\n      grid-column: 1 / -1;\n      height: 100%;\n      opacity: 0.25;\n    }\n\n    a {\n      width: 100%;\n      height: 100%;\n      background-color: var(--green);\n      border-radius: var(--border-radius);\n      vertical-align: middle;\n\n      &:hover,\n      &:focus {\n        background: transparent;\n        outline: 0;\n\n        &:before,\n        .img {\n          background: transparent;\n          filter: none;\n        }\n      }\n\n      &:before {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: 3;\n        transition: var(--transition);\n        background-color: var(--navy);\n        mix-blend-mode: screen;\n      }\n    }\n\n    .img {\n      border-radius: var(--border-radius);\n      mix-blend-mode: multiply;\n      filter: grayscale(100%) contrast(1) brightness(90%);\n\n      @media (max-width: 768px) {\n        object-fit: cover;\n        width: auto;\n        height: 100%;\n        filter: grayscale(100%) contrast(1) brightness(50%);\n      }\n    }\n  }\n`;\n\nconst Featured = () => {\n  const data = { featured: { edges: featuredData } };\n\n  const featuredProjects = data.featured.edges.filter(({ node }) => node);\n  const revealTitle = useRef(null);\n  const revealProjects = useRef([]);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealTitle.current, srConfig());\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 100)));\n  }, []);\n\n  return (\n    <section id=\"projects\">\n      <h2 className=\"numbered-heading\" ref={revealTitle}>\n        Some Things I’ve Built\n      </h2>\n\n      <StyledProjectsGrid>\n        {featuredProjects &&\n          featuredProjects.map(({ node }, i) => {\n            const { frontmatter, html } = node;\n            const { external, title, tech, github, cover, cta } = frontmatter;\n            const imageSrc = cover;\n\n            return (\n              <StyledProject key={i} ref={el => (revealProjects.current[i] = el)}>\n                <div className=\"project-content\">\n                  <div>\n                    <p className=\"project-overline\">Featured Project</p>\n\n                    <h3 className=\"project-title\">\n                      <a href={external}>{title}</a>\n                    </h3>\n\n                    <div\n                      className=\"project-description\"\n                      dangerouslySetInnerHTML={{ __html: html }}\n                    />\n\n                    {tech.length && (\n                      <ul className=\"project-tech-list\">\n                        {tech.map((tech, i) => (\n                          <li key={i}>{tech}</li>\n                        ))}\n                      </ul>\n                    )}\n\n                    <div className=\"project-links\">\n                      {cta && (\n                        <a href={cta} aria-label=\"Course Link\" className=\"cta\">\n                          Learn More\n                        </a>\n                      )}\n                      {github && (\n                        <a href={github} aria-label=\"GitHub Link\">\n                          <Icon name=\"GitHub\" />\n                        </a>\n                      )}\n                      {external && !cta && (\n                        <a href={external} aria-label=\"External Link\" className=\"external\">\n                          <Icon name=\"External\" />\n                        </a>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"project-image\">\n                  <a href={external ? external : github ? github : '#'}>\n                    <img src={imageSrc} alt={title} className=\"img\" />\n                  </a>\n                </div>\n              </StyledProject>\n            );\n          })}\n      </StyledProjectsGrid>\n    </section>\n  );\n};\n\nexport default Featured;\n","size_bytes":8774},"src/components/sections/hero.js":{"content":"import React, { useState, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styled from 'styled-components';\nimport { navDelay, loaderDelay } from '../../utils';\nimport { usePrefersReducedMotion } from '../../hooks';\n\nconst StyledHeroSection = styled.section`\n  ${({ theme }) => theme.mixins.flexCenter};\n  flex-direction: column;\n  align-items: flex-start;\n  min-height: 100vh;\n  height: 100vh;\n  padding: 0;\n\n  @media (max-height: 700px) and (min-width: 700px), (max-width: 360px) {\n    height: auto;\n    padding-top: var(--nav-height);\n  }\n\n  h1 {\n    margin: 0 0 30px 4px;\n    color: var(--green);\n    font-family: var(--font-mono);\n    font-size: clamp(var(--fz-sm), 5vw, var(--fz-md));\n    font-weight: 400;\n\n    @media (max-width: 480px) {\n      margin: 0 0 20px 2px;\n    }\n  }\n\n  h3 {\n    margin-top: 5px;\n    color: var(--slate);\n    line-height: 0.9;\n  }\n\n  p {\n    margin: 20px 0 0;\n    max-width: 540px;\n  }\n\n  .email-link {\n    ${({ theme }) => theme.mixins.bigButton};\n    margin-top: 50px;\n  }\n`;\n\nconst Hero = () => {\n  const [isMounted, setIsMounted] = useState(false);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    const timeout = setTimeout(() => setIsMounted(true), navDelay);\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const one = <h1>Hi, my name is</h1>;\n  const two = <h2 className=\"big-heading\">Sidheshwar Sharma.</h2>;\n  const three = <h3 className=\"big-heading\">I build intelligent AI systems.</h3>;\n  const four = (\n    <>\n      <p>\n        I'm an AI/ML Engineer specializing in Large Language Models, RAG, multimodal AI, and Data Science. \n        Currently, I'm focused on building intelligent systems that solve real-world problems at{' '}\n        <a href=\"https://www.drdo.gov.in/\" target=\"_blank\" rel=\"noreferrer\">\n          DRDO\n        </a>\n        .\n      </p>\n    </>\n  );\n  const five = (\n    <a\n      className=\"email-link\"\n      href=\"mailto:sidheshwarsharma77@gmail.com\"\n      target=\"_blank\"\n      rel=\"noreferrer\">\n      Get In Touch\n    </a>\n  );\n\n  const items = [one, two, three, four, five];\n\n  return (\n    <StyledHeroSection>\n      {prefersReducedMotion ? (\n        <>\n          {items.map((item, i) => (\n            <div key={i}>{item}</div>\n          ))}\n        </>\n      ) : (\n        <TransitionGroup component={null}>\n          {isMounted &&\n            items.map((item, i) => (\n              <CSSTransition key={i} classNames=\"fadeup\" timeout={loaderDelay}>\n                <div style={{ transitionDelay: `${i + 1}00ms` }}>{item}</div>\n              </CSSTransition>\n            ))}\n        </TransitionGroup>\n      )}\n    </StyledHeroSection>\n  );\n};\n\nexport default Hero;\n","size_bytes":2785},"src/components/sections/jobs.js":{"content":"import React, { useState, useEffect, useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\nimport { srConfig } from '../../config';\nimport { KEY_CODES } from '../../utils';\nimport sr from '../../utils/sr';\nimport { usePrefersReducedMotion } from '../../hooks';\nimport { jobsData } from '../../data';\n\nconst StyledJobsSection = styled.section`\n  max-width: 700px;\n\n  .inner {\n    display: flex;\n\n    @media (max-width: 600px) {\n      display: block;\n    }\n\n    // Prevent container from jumping\n    @media (min-width: 700px) {\n      min-height: 340px;\n    }\n  }\n`;\n\nconst StyledTabList = styled.div`\n  position: relative;\n  z-index: 3;\n  width: max-content;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n\n  @media (max-width: 600px) {\n    display: flex;\n    overflow-x: auto;\n    width: calc(100% + 100px);\n    padding-left: 50px;\n    margin-left: -50px;\n    margin-bottom: 30px;\n  }\n  @media (max-width: 480px) {\n    width: calc(100% + 50px);\n    padding-left: 25px;\n    margin-left: -25px;\n  }\n\n  li {\n    &:first-of-type {\n      @media (max-width: 600px) {\n        margin-left: 50px;\n      }\n      @media (max-width: 480px) {\n        margin-left: 25px;\n      }\n    }\n    &:last-of-type {\n      @media (max-width: 600px) {\n        padding-right: 50px;\n      }\n      @media (max-width: 480px) {\n        padding-right: 25px;\n      }\n    }\n  }\n`;\n\nconst StyledTabButton = styled.button`\n  ${({ theme }) => theme.mixins.link};\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: var(--tab-height);\n  padding: 0 20px 2px;\n  border-left: 2px solid var(--lightest-navy);\n  background-color: transparent;\n  color: ${({ isActive }) => (isActive ? 'var(--green)' : 'var(--slate)')};\n  font-family: var(--font-mono);\n  font-size: var(--fz-xs);\n  text-align: left;\n  white-space: nowrap;\n\n  @media (max-width: 768px) {\n    padding: 0 15px 2px;\n  }\n  @media (max-width: 600px) {\n    ${({ theme }) => theme.mixins.flexCenter};\n    min-width: 120px;\n    padding: 0 15px;\n    border-left: 0;\n    border-bottom: 2px solid var(--lightest-navy);\n    text-align: center;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--light-navy);\n  }\n`;\n\nconst StyledHighlight = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 2px;\n  height: var(--tab-height);\n  border-radius: var(--border-radius);\n  background: var(--green);\n  transform: translateY(calc(${({ activeTabId }) => activeTabId} * var(--tab-height)));\n  transition: transform 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);\n  transition-delay: 0.1s;\n\n  @media (max-width: 600px) {\n    top: auto;\n    bottom: 0;\n    width: 100%;\n    max-width: var(--tab-width);\n    height: 2px;\n    margin-left: 50px;\n    transform: translateX(calc(${({ activeTabId }) => activeTabId} * var(--tab-width)));\n  }\n  @media (max-width: 480px) {\n    margin-left: 25px;\n  }\n`;\n\nconst StyledTabPanels = styled.div`\n  position: relative;\n  width: 100%;\n  margin-left: 20px;\n\n  @media (max-width: 600px) {\n    margin-left: 0;\n  }\n`;\n\nconst StyledTabPanel = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 10px 5px;\n\n  ul {\n    ${({ theme }) => theme.mixins.fancyList};\n  }\n\n  h3 {\n    margin-bottom: 2px;\n    font-size: var(--fz-xxl);\n    font-weight: 500;\n    line-height: 1.3;\n\n    .company {\n      color: var(--green);\n    }\n  }\n\n  .range {\n    margin-bottom: 25px;\n    color: var(--light-slate);\n    font-family: var(--font-mono);\n    font-size: var(--fz-xs);\n  }\n`;\n\nconst Jobs = () => {\n  const jobs = jobsData;\n\n  const [activeTabId, setActiveTabId] = useState(0);\n  const [tabFocus, setTabFocus] = useState(null);\n  const tabs = useRef([]);\n  const revealContainer = useRef(null);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealContainer.current, srConfig());\n  }, []);\n\n  const focusTab = () => {\n    if (tabs.current[tabFocus]) {\n      tabs.current[tabFocus].focus();\n      return;\n    }\n    // If we're at the end, go to the start\n    if (tabFocus >= tabs.current.length) {\n      setTabFocus(0);\n    }\n    // If we're at the start, move to the end\n    if (tabFocus < 0) {\n      setTabFocus(tabs.current.length - 1);\n    }\n  };\n\n  // Only re-run the effect if tabFocus changes\n  useEffect(() => focusTab(), [tabFocus]);\n\n  // Focus on tabs when using up & down arrow keys\n  const onKeyDown = e => {\n    switch (e.key) {\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setTabFocus(tabFocus - 1);\n        break;\n      }\n\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setTabFocus(tabFocus + 1);\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  };\n\n  return (\n    <StyledJobsSection id=\"jobs\" ref={revealContainer}>\n      <h2 className=\"numbered-heading\">Where I’ve Worked</h2>\n\n      <div className=\"inner\">\n        <StyledTabList role=\"tablist\" aria-label=\"Job tabs\" onKeyDown={e => onKeyDown(e)}>\n          {jobs &&\n            jobs.map(({ node }, i) => {\n              const { company } = node.frontmatter;\n              return (\n                <StyledTabButton\n                  key={i}\n                  isActive={activeTabId === i}\n                  onClick={() => setActiveTabId(i)}\n                  ref={el => (tabs.current[i] = el)}\n                  id={`tab-${i}`}\n                  role=\"tab\"\n                  tabIndex={activeTabId === i ? '0' : '-1'}\n                  aria-selected={activeTabId === i ? true : false}\n                  aria-controls={`panel-${i}`}>\n                  <span>{company}</span>\n                </StyledTabButton>\n              );\n            })}\n          <StyledHighlight activeTabId={activeTabId} />\n        </StyledTabList>\n\n        <StyledTabPanels>\n          {jobs &&\n            jobs.map(({ node }, i) => {\n              const { frontmatter, html } = node;\n              const { title, url, company, range } = frontmatter;\n\n              return (\n                <CSSTransition key={i} in={activeTabId === i} timeout={250} classNames=\"fade\">\n                  <StyledTabPanel\n                    id={`panel-${i}`}\n                    role=\"tabpanel\"\n                    tabIndex={activeTabId === i ? '0' : '-1'}\n                    aria-labelledby={`tab-${i}`}\n                    aria-hidden={activeTabId !== i}\n                    hidden={activeTabId !== i}>\n                    <h3>\n                      <span>{title}</span>\n                      <span className=\"company\">\n                        &nbsp;@&nbsp;\n                        <a href={url} className=\"inline-link\">\n                          {company}\n                        </a>\n                      </span>\n                    </h3>\n\n                    <p className=\"range\">{range}</p>\n\n                    <div dangerouslySetInnerHTML={{ __html: html }} />\n                  </StyledTabPanel>\n                </CSSTransition>\n              );\n            })}\n        </StyledTabPanels>\n      </div>\n    </StyledJobsSection>\n  );\n};\n\nexport default Jobs;\n","size_bytes":7081},"src/components/sections/projects.js":{"content":"import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport styled from 'styled-components';\nimport { srConfig } from '../../config';\nimport sr from '../../utils/sr';\nimport { Icon } from '../../components/icons';\nimport { usePrefersReducedMotion } from '../../hooks';\nimport { projectsData } from '../../data';\n\nconst StyledProjectsSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h2 {\n    font-size: clamp(24px, 5vw, var(--fz-heading));\n  }\n\n  .archive-link {\n    font-family: var(--font-mono);\n    font-size: var(--fz-sm);\n    &:after {\n      bottom: 0.1em;\n    }\n  }\n\n  .projects-grid {\n    ${({ theme }) => theme.mixins.resetList};\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    grid-gap: 15px;\n    position: relative;\n    margin-top: 50px;\n\n    @media (max-width: 1080px) {\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    }\n  }\n\n  .more-button {\n    ${({ theme }) => theme.mixins.button};\n    margin: 80px auto 0;\n  }\n`;\n\nconst StyledProject = styled.li`\n  position: relative;\n  cursor: default;\n  transition: var(--transition);\n\n  @media (prefers-reduced-motion: no-preference) {\n    &:hover,\n    &:focus-within {\n      .project-inner {\n        transform: translateY(-7px);\n      }\n    }\n  }\n\n  a {\n    position: relative;\n    z-index: 1;\n  }\n\n  .project-inner {\n    ${({ theme }) => theme.mixins.boxShadow};\n    ${({ theme }) => theme.mixins.flexBetween};\n    flex-direction: column;\n    align-items: flex-start;\n    position: relative;\n    height: 100%;\n    padding: 2rem 1.75rem;\n    border-radius: var(--border-radius);\n    background-color: var(--light-navy);\n    transition: var(--transition);\n    overflow: auto;\n  }\n\n  .project-top {\n    ${({ theme }) => theme.mixins.flexBetween};\n    margin-bottom: 35px;\n\n    .folder {\n      color: var(--green);\n      svg {\n        width: 40px;\n        height: 40px;\n      }\n    }\n\n    .project-links {\n      display: flex;\n      align-items: center;\n      margin-right: -10px;\n      color: var(--light-slate);\n\n      a {\n        ${({ theme }) => theme.mixins.flexCenter};\n        padding: 5px 7px;\n\n        &.external {\n          svg {\n            width: 22px;\n            height: 22px;\n            margin-top: -4px;\n          }\n        }\n\n        svg {\n          width: 20px;\n          height: 20px;\n        }\n      }\n    }\n  }\n\n  .project-title {\n    margin: 0 0 10px;\n    color: var(--lightest-slate);\n    font-size: var(--fz-xxl);\n\n    a {\n      position: static;\n\n      &:before {\n        content: '';\n        display: block;\n        position: absolute;\n        z-index: 0;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n      }\n    }\n  }\n\n  .project-description {\n    color: var(--light-slate);\n    font-size: 17px;\n\n    a {\n      ${({ theme }) => theme.mixins.inlineLink};\n    }\n  }\n\n  .project-tech-list {\n    display: flex;\n    align-items: flex-end;\n    flex-grow: 1;\n    flex-wrap: wrap;\n    padding: 0;\n    margin: 20px 0 0 0;\n    list-style: none;\n\n    li {\n      font-family: var(--font-mono);\n      font-size: var(--fz-xxs);\n      line-height: 1.75;\n\n      &:not(:last-of-type) {\n        margin-right: 15px;\n      }\n    }\n  }\n`;\n\nconst Projects = () => {\n  const data = { projects: { edges: projectsData } };\n\n  const [showMore, setShowMore] = useState(false);\n  const revealTitle = useRef(null);\n  const revealArchiveLink = useRef(null);\n  const revealProjects = useRef([]);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealArchiveLink.current, srConfig());\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 100)));\n  }, []);\n\n  const GRID_LIMIT = 6;\n  const projects = data.projects.edges.filter(({ node }) => node);\n  const firstSix = projects.slice(0, GRID_LIMIT);\n  const projectsToShow = showMore ? projects : firstSix;\n\n  const projectInner = node => {\n    const { frontmatter, html } = node;\n    const { github, external, title, tech } = frontmatter;\n\n    return (\n      <div className=\"project-inner\">\n        <header>\n          <div className=\"project-top\">\n            <div className=\"folder\">\n              <Icon name=\"Folder\" />\n            </div>\n            <div className=\"project-links\">\n              {github && (\n                <a href={github} aria-label=\"GitHub Link\" target=\"_blank\" rel=\"noreferrer\">\n                  <Icon name=\"GitHub\" />\n                </a>\n              )}\n              {external && (\n                <a\n                  href={external}\n                  aria-label=\"External Link\"\n                  className=\"external\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\">\n                  <Icon name=\"External\" />\n                </a>\n              )}\n            </div>\n          </div>\n\n          <h3 className=\"project-title\">\n            <a href={external} target=\"_blank\" rel=\"noreferrer\">\n              {title}\n            </a>\n          </h3>\n\n          <div className=\"project-description\" dangerouslySetInnerHTML={{ __html: html }} />\n        </header>\n\n        <footer>\n          {tech && (\n            <ul className=\"project-tech-list\">\n              {tech.map((tech, i) => (\n                <li key={i}>{tech}</li>\n              ))}\n            </ul>\n          )}\n        </footer>\n      </div>\n    );\n  };\n\n  return (\n    <StyledProjectsSection>\n      <h2 ref={revealTitle}>Other Noteworthy Projects</h2>\n\n      <Link className=\"inline-link archive-link\" to=\"/archive\" ref={revealArchiveLink}>\n        view the archive\n      </Link>\n\n      <ul className=\"projects-grid\">\n        {prefersReducedMotion ? (\n          <>\n            {projectsToShow &&\n              projectsToShow.map(({ node }, i) => (\n                <StyledProject key={i}>{projectInner(node)}</StyledProject>\n              ))}\n          </>\n        ) : (\n          <TransitionGroup component={null}>\n            {projectsToShow &&\n              projectsToShow.map(({ node }, i) => (\n                <CSSTransition\n                  key={i}\n                  classNames=\"fadeup\"\n                  timeout={i >= GRID_LIMIT ? (i - GRID_LIMIT) * 300 : 300}\n                  exit={false}>\n                  <StyledProject\n                    key={i}\n                    ref={el => (revealProjects.current[i] = el)}\n                    style={{\n                      transitionDelay: `${i >= GRID_LIMIT ? (i - GRID_LIMIT) * 100 : 0}ms`,\n                    }}>\n                    {projectInner(node)}\n                  </StyledProject>\n                </CSSTransition>\n              ))}\n          </TransitionGroup>\n        )}\n      </ul>\n\n      <button className=\"more-button\" onClick={() => setShowMore(!showMore)}>\n        Show {showMore ? 'Less' : 'More'}\n      </button>\n    </StyledProjectsSection>\n  );\n};\n\nexport default Projects;\n","size_bytes":7090},"src/App.css":{"content":".App {\n  text-align: center;\n}\n\n.App-logo {\n  height: 40vmin;\n  pointer-events: none;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  .App-logo {\n    animation: App-logo-spin infinite 20s linear;\n  }\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n","size_bytes":564},"src/App.test.tsx":{"content":"import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  render(<App />);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n","size_bytes":273},"src/App.tsx":{"content":"import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Layout, Hero, About, Skills, Jobs, Featured, Projects, Contact } from './components';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Layout>\n        <main className=\"fillHeight\">\n          <Hero />\n          <About />\n          <Featured />\n          <Skills />\n          <Jobs />\n          <Projects />\n          <Contact />\n        </main>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default App;\n","size_bytes":512},"src/components/layout.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { Head, Loader, Nav, Social, Email, Footer } from './index';\nimport { GlobalStyle, theme } from '../styles';\n\nconst StyledContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  const isHome = window.location.pathname === '/';\n  const [isLoading, setIsLoading] = useState(isHome);\n\n  // Sets target=\"_blank\" rel=\"noopener noreferrer\" on external links\n  const handleExternalLinks = () => {\n    const allLinks = Array.from(document.querySelectorAll('a'));\n    if (allLinks.length > 0) {\n      allLinks.forEach(link => {\n        if (link.host !== window.location.host) {\n          link.setAttribute('rel', 'noopener noreferrer');\n          link.setAttribute('target', '_blank');\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (isLoading) {\n      return;\n    }\n\n    if (window.location.hash) {\n      const id = window.location.hash.substring(1); // location.hash without the '#'\n      setTimeout(() => {\n        const el = document.getElementById(id);\n        if (el) {\n          el.scrollIntoView();\n          el.focus();\n        }\n      }, 0);\n    }\n\n    handleExternalLinks();\n  }, [isLoading]);\n\n  return (\n    <>\n      <Head />\n\n      <div id=\"root\">\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n\n          <a className=\"skip-to-content\" href=\"#content\">\n            Skip to Content\n          </a>\n\n          {isLoading && isHome ? (\n            <Loader finishLoading={() => setIsLoading(false)} />\n          ) : (\n            <StyledContent>\n              <Nav isHome={isHome} />\n              <Social isHome={isHome} />\n              <Email isHome={isHome} />\n\n              <div id=\"content\">\n                {children}\n                <Footer />\n              </div>\n            </StyledContent>\n          )}\n        </ThemeProvider>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","size_bytes":2092},"src/components/sections/skills.js":{"content":"import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { srConfig } from '../../config';\nimport sr from '../../utils/sr';\nimport { usePrefersReducedMotion } from '../../hooks';\nimport { skillsData } from '../../data';\n\nconst StyledSkillsSection = styled.section`\n  max-width: 900px;\n\n  .inner {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n    gap: 20px;\n\n    @media (max-width: 768px) {\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 15px;\n    }\n  }\n`;\n\nconst StyledSkillsGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  min-height: 140px;\n  background: var(--light-navy);\n  padding: 15px;\n  border-radius: 6px;\n  border: 1px solid var(--lightest-navy);\n  transition: var(--transition);\n\n  &:hover {\n    background: var(--lightest-navy);\n    transform: translateY(-2px);\n  }\n`;\n\nconst StyledSkillsTitle = styled.h3`\n  font-size: var(--fz-xl);\n  font-weight: 600;\n  color: var(--lightest-slate);\n  margin-bottom: 12px;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: -15px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 3px;\n    height: 16px;\n    background: var(--green);\n    border-radius: 2px;\n  }\n`;\n\nconst StyledSkillsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst StyledSkillItem = styled.li`\n  background: var(--light-navy);\n  color: var(--slate);\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: var(--fz-xs);\n  font-family: var(--font-mono);\n  border: 1px solid var(--lightest-navy);\n  transition: var(--transition);\n\n  &:hover {\n    background: var(--lightest-navy);\n    color: var(--lightest-slate);\n    transform: translateY(-1px);\n  }\n`;\n\nconst Skills = () => {\n  const revealTitle = useRef(null);\n  const revealSkills = useRef([]);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) {\n      return;\n    }\n\n    sr.reveal(revealTitle.current, srConfig());\n    revealSkills.current.forEach((ref, i) =>\n      sr.reveal(ref, srConfig(i * 100))\n    );\n  }, [prefersReducedMotion]);\n\n  const skillCategories = [\n    { title: 'Languages', skills: skillsData.languages },\n    { title: 'ML/DL', skills: skillsData.ml_dl },\n    { title: 'Generative AI', skills: skillsData.generative_ai },\n    { title: 'Multimodal AI', skills: skillsData.multimodal_ai },\n    { title: 'Data Science', skills: skillsData.data_science },\n    { title: 'Libraries & Tools', skills: skillsData.libraries_tools },\n  ];\n\n  return (\n    <StyledSkillsSection id=\"skills\" ref={revealTitle}>\n      <h2 className=\"numbered-heading\">Skills & Technologies</h2>\n\n      <div className=\"inner\">\n        {skillCategories.map((category, i) => (\n          <StyledSkillsGrid key={i} ref={el => (revealSkills.current[i] = el)}>\n            <StyledSkillsTitle>{category.title}</StyledSkillsTitle>\n            <StyledSkillsList>\n              {category.skills.map((skill, j) => (\n                <StyledSkillItem key={j}>{skill}</StyledSkillItem>\n              ))}\n            </StyledSkillsList>\n          </StyledSkillsGrid>\n        ))}\n      </div>\n    </StyledSkillsSection>\n  );\n};\n\nexport default Skills;\n","size_bytes":3306},"src/data.js":{"content":"// Static data to replace GraphQL queries\nexport const jobsData = [\n  {\n    node: {\n      frontmatter: {\n        title: \"Machine Learning Intern\",\n        company: \"DRDO\",\n        location: \"Nashik, India\",\n        range: \"June 2025 – Present\",\n        url: \"https://www.drdo.gov.in\"\n      },\n      html: \"<p>Designed ML pipelines to predict material properties from experimental data.</p><p>Applied feature engineering using physical equations and statistical methods.</p><p>Achieved strong accuracy (R² = 0.98 standard, 0.99 with Repeated K-Fold Cross Validation).</p><p>Contributed to an upcoming research paper with DRDO scientists.</p>\"\n    }\n  }\n];\n\nexport const projectsData = [\n  {\n    node: {\n      frontmatter: {\n        title: \"PDF Question Answering using RAG\",\n        github: \"https://github.com/siddcxdes/pdf_question_answering\",\n        external: \"\",\n        tech: [\"Python\", \"LangChain\", \"LlamaIndex\", \"OpenAI GPT-3.5\", \"Streamlit\"]\n      },\n      html: \"<p>Built a Retrieval-Augmented Generation system that answers queries from uploaded PDFs. Implemented embeddings, semantic search, and chunk parsing. Designed a responsive Streamlit UI.</p>\"\n    }\n  },\n  {\n    node: {\n      frontmatter: {\n        title: \"Automated Grammar Scoring Engine\",\n        github: \"https://github.com/siddcxdes/grammar_scoring_engine\",\n        external: \"\",\n        tech: [\"Python\", \"Whisper\", \"spaCy\", \"DistilBERT\", \"Random Forest\"]\n      },\n      html: \"<p>Built speech-to-text grammar evaluation system. Rated grammar fluency/correctness (0–5 scale). Achieved R² = 0.94 alignment with expert scores.</p>\"\n    }\n  },\n  {\n    node: {\n      frontmatter: {\n        title: \"Sign Language Recognition System\",\n        github: \"https://github.com/siddcxdes/sign-language-detection\",\n        external: \"\",\n        tech: [\"Python\", \"OpenCV\", \"MediaPipe\", \"Scikit-learn\"]\n      },\n      html: \"<p>Real-time gesture-to-text translator. 90%+ accuracy across 20+ gestures. Implemented live feedback for smooth user experience.</p>\"\n    }\n  },\n  {\n    node: {\n      frontmatter: {\n        title: \"Customer Churn Prediction\",\n        github: \"\",\n        external: \"\",\n        tech: [\"Python\", \"SQL\", \"Scikit-learn\", \"Random Forest\", \"Logistic Regression\"]\n      },\n      html: \"<p>Predicted customer churn from transaction + engagement data. Achieved 88% F1 score, provided retention insights.</p>\"\n    }\n  },\n  {\n    node: {\n      frontmatter: {\n        title: \"Recommender System for Personalized Learning\",\n        github: \"\",\n        external: \"\",\n        tech: [\"Python\", \"Surprise\", \"Matrix Factorization\", \"SQL\"]\n      },\n      html: \"<p>Designed collaborative filtering system. Improved recommendation accuracy by 20%. Integrated with SQL backend for scalability.</p>\"\n    }\n  }\n];\n\nexport const featuredData = [\n  {\n    node: {\n      frontmatter: {\n        title: \"PDF Question Answering using RAG\",\n        cover: \"https://picsum.photos/600/400?random=1\",\n        github: \"https://github.com/siddcxdes/pdf_question_answering\",\n        external: \"\",\n        tech: [\"Python\", \"LangChain\", \"LlamaIndex\", \"OpenAI GPT-3.5\", \"Streamlit\"],\n        showInProjects: true\n      },\n      html: \"<p>Built a Retrieval-Augmented Generation system that answers queries from uploaded PDFs.</p><p>Implemented embeddings, semantic search, and chunk parsing.</p><p>Designed a responsive Streamlit UI.</p>\"\n    }\n  },\n  {\n    node: {\n      frontmatter: {\n        title: \"Automated Grammar Scoring Engine\",\n        cover: \"https://picsum.photos/600/400?random=2\",\n        github: \"https://github.com/siddcxdes/grammar_scoring_engine\",\n        external: \"\",\n        tech: [\"Python\", \"Whisper\", \"spaCy\", \"DistilBERT\", \"Random Forest\"],\n        showInProjects: true\n      },\n      html: \"<p>Built speech-to-text grammar evaluation system.</p><p>Rated grammar fluency/correctness (0–5 scale).</p><p>Achieved R² = 0.94 alignment with expert scores.</p>\"\n    }\n  },\n  {\n    node: {\n      frontmatter: {\n        title: \"Sign Language Recognition System\",\n        cover: \"https://picsum.photos/600/400?random=3\",\n        github: \"https://github.com/siddcxdes/sign-language-detection\",\n        external: \"\",\n        tech: [\"Python\", \"OpenCV\", \"MediaPipe\", \"Scikit-learn\"],\n        showInProjects: true\n      },\n      html: \"<p>Real-time gesture-to-text translator.</p><p>90%+ accuracy across 20+ gestures.</p><p>Implemented live feedback for smooth user experience.</p>\"\n    }\n  }\n];\n\nexport const skillsData = {\n  languages: [\"Python\", \"SQL\", \"C++\"],\n  ml_dl: [\"Scikit-learn\", \"TensorFlow\", \"Keras\"],\n  generative_ai: [\"Hugging Face Transformers\", \"LangChain\", \"LlamaIndex\", \"OpenAI API\", \"FAISS\", \"Chroma\"],\n  multimodal_ai: [\"Whisper\", \"OpenCV\", \"MediaPipe\"],\n  data_science: [\"Regression\", \"Classification\", \"Decision Trees\", \"Random Forest\", \"Gradient Boosting\", \"Ensemble Methods\"],\n  libraries_tools: [\"Pandas\", \"NumPy\", \"Matplotlib\", \"Git\", \"Docker\", \"Streamlit\"]\n};\n\nexport const siteMetadata = {\n  title: 'Sidheshwar Sharma',\n  description: 'Sidheshwar Sharma is an AI/ML Engineer specializing in Large Language Models, RAG, multimodal AI, and Data Science.',\n  siteUrl: 'https://sidheshwar-sharma.com',\n  image: '/og.png',\n  twitterUsername: '@sidheshwar23',\n};\n","size_bytes":5247},"src/index.css":{"content":"body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","size_bytes":366},"src/index.tsx":{"content":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","size_bytes":554},"src/react-app-env.d.ts":{"content":"/// <reference types=\"react-scripts\" />\n","size_bytes":40},"src/reportWebVitals.ts":{"content":"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","size_bytes":425},"src/setupTests.ts":{"content":"// jest-dom adds custom jest matchers for asserting on DOM nodes.\n// allows you to do things like:\n// expect(element).toHaveTextContent(/react/i)\n// learn more: https://github.com/testing-library/jest-dom\nimport '@testing-library/jest-dom';\n","size_bytes":241},"replit.md":{"content":"# Overview\n\nA modern React portfolio website showcasing professional experience, projects, and skills. Built with TypeScript and styled-components, the site features smooth animations, responsive design, and a clean interface to present developer credentials and work samples.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n\n**Framework**: React 18 with TypeScript for type safety and modern development patterns. The application uses Create React App as the build tool and development environment.\n\n**Styling**: Styled-components for CSS-in-JS styling with a comprehensive design system including:\n- Global styles with CSS custom properties for consistent theming\n- Responsive mixins and breakpoints for mobile-first design\n- Dark navy color scheme with green accent colors\n- Custom font loading (Calibre and SF Mono)\n\n**Component Structure**: Modular component architecture with clear separation of concerns:\n- Layout components (Nav, Footer, Side panels)\n- Section components (Hero, About, Skills, Jobs, Projects, Contact)\n- Utility components (Loader, Icons, Email/Social links)\n- Reusable styled components with theme integration\n\n**Routing**: React Router DOM for client-side navigation, configured for single-page application with hash-based section navigation.\n\n**Animations**: \n- Anime.js for complex loading animations\n- React Transition Group for component enter/exit animations\n- ScrollReveal for scroll-triggered animations\n- CSS transitions for hover effects and micro-interactions\n\n**State Management**: Local React state using hooks (useState, useEffect) with custom hooks for:\n- Scroll direction detection\n- Reduced motion preferences\n- Click outside detection\n\n## Data Management\n\n**Static Data**: Portfolio content stored in JavaScript modules (data.js, config.js) containing:\n- Job experience with company details and descriptions\n- Project information with technologies and links\n- Social media links and contact information\n- Navigation structure and site metadata\n\n**Content Structure**: Projects and jobs data structured with frontmatter-style objects containing metadata (title, company, tech stack) and HTML content descriptions.\n\n## Performance Optimizations\n\n**Code Splitting**: Component-level imports with dynamic loading capabilities\n**Asset Optimization**: Custom font loading with WOFF/WOFF2 formats\n**Animation Performance**: Reduced motion support and optimized transition timing\n**Responsive Images**: Styled-components media queries for optimal loading\n\n## Accessibility Features\n\n**Keyboard Navigation**: Full keyboard support with proper focus management\n**Screen Reader Support**: Semantic HTML with ARIA labels and proper heading hierarchy\n**Reduced Motion**: Respects user preferences for reduced motion\n**Focus Management**: Custom focus styles and proper tab order\n\n## Development Tools\n\n**TypeScript Configuration**: Strict type checking with modern ES features\n**Testing Setup**: Jest and React Testing Library for component testing\n**Code Quality**: ESLint configuration with React and accessibility rules\n**Build Process**: Create React App with custom HOST/PORT configuration for deployment","size_bytes":3220}},"version":1}